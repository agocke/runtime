// <auto-generated>
using System.Reflection;

namespace FxResources.Microsoft.Interop.SourceGeneration
{
    internal static class SR { }
}
namespace System
{
    internal static partial class SR
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(FxResources.Microsoft.Interop.SourceGeneration.SR)));

        /// <summary>Marshalling an array from unmanaged to managed requires either the 'SizeParamIndex' or 'SizeConst' fields to be set on a 'MarshalAsAttribute' or the 'ConstantElementCount' or 'CountElementName' properties to be set on a 'MarshalUsingAttribute'.</summary>
        internal static string @ArraySizeMustBeSpecified => GetResourceString("ArraySizeMustBeSpecified", @"Marshalling an array from unmanaged to managed requires either the 'SizeParamIndex' or 'SizeConst' fields to be set on a 'MarshalAsAttribute' or the 'ConstantElementCount' or 'CountElementName' properties to be set on a 'MarshalUsingAttribute'.");
        /// <summary>The specified collection size parameter for an collection must be an integer type. If the size information is applied to a nested collection, the size parameter must be a collection of one less level of nesting with an integral element.</summary>
        internal static string @CollectionSizeParamTypeMustBeIntegral => GetResourceString("CollectionSizeParamTypeMustBeIntegral", @"The specified collection size parameter for an collection must be an integer type. If the size information is applied to a nested collection, the size parameter must be a collection of one less level of nesting with an integral element.");
        /// <summary>The provided graph has cycles and cannot be topologically sorted.</summary>
        internal static string @GraphHasCycles => GetResourceString("GraphHasCycles", @"The provided graph has cycles and cannot be topologically sorted.");
        /// <summary>The '[In]' attribute is not necessary unless the '[Out]' attribute is also used. The behavior of the '[In]' attribute without the '[Out]' attribute is the same as the default behavior.</summary>
        internal static string @InAttributeOnlyIsDefault => GetResourceString("InAttributeOnlyIsDefault", @"The '[In]' attribute is not necessary unless the '[Out]' attribute is also used. The behavior of the '[In]' attribute without the '[Out]' attribute is the same as the default behavior.");
        /// <summary>The '[In]' and '[Out]' attributes are unsupported on parameters passed by reference. Use the 'in', 'ref', or 'out' keywords instead.</summary>
        internal static string @InOutAttributeByRefNotSupported => GetResourceString("InOutAttributeByRefNotSupported", @"The '[In]' and '[Out]' attributes are unsupported on parameters passed by reference. Use the 'in', 'ref', or 'out' keywords instead.");
        /// <summary>The provided '[In]' and '[Out]' attributes on this parameter are unsupported on this parameter.</summary>
        internal static string @InOutAttributeMarshalerNotSupported => GetResourceString("InOutAttributeMarshalerNotSupported", @"The provided '[In]' and '[Out]' attributes on this parameter are unsupported on this parameter.");
        /// <summary>Marshalling bool without explicit marshalling information is not supported. Specify either 'MarshalUsingAttribute' or 'MarshalAsAttribute'.</summary>
        internal static string @MarshallingBoolAsUndefinedNotSupported => GetResourceString("MarshallingBoolAsUndefinedNotSupported", @"Marshalling bool without explicit marshalling information is not supported. Specify either 'MarshalUsingAttribute' or 'MarshalAsAttribute'.");
        /// <summary>Marshalling char with 'StringMarshalling.{0}' is not supported. Instead, manually convert the char type to the desired byte representation and pass to the source-generated P/Invoke.</summary>
        internal static string @MarshallingCharAsSpecifiedStringMarshallingNotSupported => GetResourceString("MarshallingCharAsSpecifiedStringMarshallingNotSupported", @"Marshalling char with 'StringMarshalling.{0}' is not supported. Instead, manually convert the char type to the desired byte representation and pass to the source-generated P/Invoke.");
        /// <summary>Marshalling string or char without explicit marshalling information is not supported. Specify '{0}.StringMarshalling', '{0}.StringMarshallingCustomType', 'MarshalUsingAttribute' or 'MarshalAsAttribute'.</summary>
        internal static string @MarshallingStringOrCharAsUndefinedNotSupported => GetResourceString("MarshallingStringOrCharAsUndefinedNotSupported", @"Marshalling string or char without explicit marshalling information is not supported. Specify '{0}.StringMarshalling', '{0}.StringMarshallingCustomType', 'MarshalUsingAttribute' or 'MarshalAsAttribute'.");
        /// <summary>This element cannot depend on '{0}' for collection size information without creating a dependency cycle</summary>
        internal static string @CyclicalCountInfo => GetResourceString("CyclicalCountInfo", @"This element cannot depend on '{0}' for collection size information without creating a dependency cycle");
        /// <summary>Count information for a given element at a given indirection level can only be specified once</summary>
        internal static string @DuplicateCountInfo => GetResourceString("DuplicateCountInfo", @"Count information for a given element at a given indirection level can only be specified once");
        /// <summary>Multiple marshalling attributes per element per indirection level is unsupported, but duplicate information was provided for indirection level {0}</summary>
        internal static string @DuplicateMarshallingInfo => GetResourceString("DuplicateMarshallingInfo", @"Multiple marshalling attributes per element per indirection level is unsupported, but duplicate information was provided for indirection level {0}");
        /// <summary>Marshalling info was specified for 'ElementIndirectionDepth' {0}, but marshalling info was only needed for {1} level(s) of indirection</summary>
        internal static string @ExtraneousMarshallingInfo => GetResourceString("ExtraneousMarshallingInfo", @"Marshalling info was specified for 'ElementIndirectionDepth' {0}, but marshalling info was only needed for {1} level(s) of indirection");
        /// <summary>Only one of 'ConstantElementCount' or 'ElementCountInfo' may be used in a 'MarshalUsingAttribute' for a given 'ElementIndirectionDepth'</summary>
        internal static string @ConstantAndElementCountInfoDisallowed => GetResourceString("ConstantAndElementCountInfoDisallowed", @"Only one of 'ConstantElementCount' or 'ElementCountInfo' may be used in a 'MarshalUsingAttribute' for a given 'ElementIndirectionDepth'");
        /// <summary>Runtime marshalling must be disabled in this project by applying the 'System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute' to the assembly to enable marshalling this type.</summary>
        internal static string @RuntimeMarshallingMustBeDisabled => GetResourceString("RuntimeMarshallingMustBeDisabled", @"Runtime marshalling must be disabled in this project by applying the 'System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute' to the assembly to enable marshalling this type.");
        /// <summary>Marshalling char with 'StringMarshalling.Custom' is not supported. To use a custom type marshaller, specify 'MarshalUsingAttribute'.</summary>
        internal static string @MarshallingCharAsStringMarshallingCustomNotSupported => GetResourceString("MarshallingCharAsStringMarshallingCustomNotSupported", @"Marshalling char with 'StringMarshalling.Custom' is not supported. To use a custom type marshaller, specify 'MarshalUsingAttribute'.");
        /// <summary>The specified parameter needs to be marshalled from managed to unmanaged and unmanaged to managed, but the marshaller type '{0}' does not support it.</summary>
        internal static string @BidirectionalMissingRequiredMarshaller => GetResourceString("BidirectionalMissingRequiredMarshaller", @"The specified parameter needs to be marshalled from managed to unmanaged and unmanaged to managed, but the marshaller type '{0}' does not support it.");
        /// <summary>The specified parameter needs to be marshalled from managed to unmanaged, but the marshaller type '{0}' does not support it.</summary>
        internal static string @ManagedToUnmanagedMissingRequiredMarshaller => GetResourceString("ManagedToUnmanagedMissingRequiredMarshaller", @"The specified parameter needs to be marshalled from managed to unmanaged, but the marshaller type '{0}' does not support it.");
        /// <summary>The specified parameter needs to be marshalled from unmanaged to managed, but the marshaller type '{0}' does not support it.</summary>
        internal static string @UnmanagedToManagedMissingRequiredMarshaller => GetResourceString("UnmanagedToManagedMissingRequiredMarshaller", @"The specified parameter needs to be marshalled from unmanaged to managed, but the marshaller type '{0}' does not support it.");
        /// <summary>The marshaller type '{0}' for managed type '{1}' must be a static class or a struct.</summary>
        internal static string @MarshallerTypeMustBeStaticClassOrStruct => GetResourceString("MarshallerTypeMustBeStaticClassOrStruct", @"The marshaller type '{0}' for managed type '{1}' must be a static class or a struct.");
        /// <summary>The marshaller entry point type '{0}' for managed type '{1}' must have an arity of one greater than the managed type.</summary>
        internal static string @MarshallerEntryPointTypeMustMatchArity => GetResourceString("MarshallerEntryPointTypeMustMatchArity", @"The marshaller entry point type '{0}' for managed type '{1}' must have an arity of one greater than the managed type.");
        /// <summary>All marshallers for values that are passed as the unmanaged return value must have the same unmanaged type.</summary>
        internal static string @MarshallerInNativeReturnPositionMustMatchNativeReturnType => GetResourceString("MarshallerInNativeReturnPositionMustMatchNativeReturnType", @"All marshallers for values that are passed as the unmanaged return value must have the same unmanaged type.");
        /// <summary>Containing type '{0}' has accessibility '{1}'.</summary>
        internal static string @ContainingTypeAccessibilityDetails => GetResourceString("ContainingTypeAccessibilityDetails", @"Containing type '{0}' has accessibility '{1}'.");
        /// <summary>'{0}' has accessibility '{1}'.</summary>
        internal static string @TypeAccessibilityDetails => GetResourceString("TypeAccessibilityDetails", @"'{0}' has accessibility '{1}'.");
        /// <summary>The '[In]' attribute is not supported unless the '[Out]' attribute is also used. Blittable arrays cannot be marshalled as '[In]' only.</summary>
        internal static string @InAttributeNotSupportedWithoutOutBlittableArray => GetResourceString("InAttributeNotSupportedWithoutOutBlittableArray", @"The '[In]' attribute is not supported unless the '[Out]' attribute is also used. Blittable arrays cannot be marshalled as '[In]' only.");
        /// <summary>Add 'GeneratedComClassAttribute' to enable passing objects of this type to COM and allow unsafe code</summary>
        internal static string @AddGeneratedComClassAddUnsafe => GetResourceString("AddGeneratedComClassAddUnsafe", @"Add 'GeneratedComClassAttribute' to enable passing objects of this type to COM and allow unsafe code");
        /// <summary>This type implements at least one type with the 'GeneratedComInterfaceAttribute' attribute or its base type has the 'GeneratedComClassAttribute' attribute. Add the 'GeneratedComClassAttribute' to enable passing this type to COM and exposing the COM interfa ...</summary>
        internal static string @AddGeneratedComClassAttributeDescription => GetResourceString("AddGeneratedComClassAttributeDescription", @"This type implements at least one type with the 'GeneratedComInterfaceAttribute' attribute or its base type has the 'GeneratedComClassAttribute' attribute. Add the 'GeneratedComClassAttribute' to enable passing this type to COM and exposing the COM interfaces for the types with the 'GeneratedComInterfaceAttribute' from objects of this type.");
        /// <summary>Add the 'GeneratedComClassAttribute' to '{0}' to enable passing objects of type '{0}' to COM</summary>
        internal static string @AddGeneratedComClassAttributeMessage => GetResourceString("AddGeneratedComClassAttributeMessage", @"Add the 'GeneratedComClassAttribute' to '{0}' to enable passing objects of type '{0}' to COM");
        /// <summary>Add 'GeneratedComClassAttribute' to enable passing objects of this type to COM</summary>
        internal static string @AddGeneratedComClassAttributeTitle => GetResourceString("AddGeneratedComClassAttributeTitle", @"Add 'GeneratedComClassAttribute' to enable passing objects of this type to COM");
        /// <summary>Add missing custom type marshaller members</summary>
        internal static string @AddMissingCustomTypeMarshallerMembers => GetResourceString("AddMissingCustomTypeMarshallerMembers", @"Add missing custom type marshaller members");
        /// <summary>The analysis required to generate code for this interface or method has failed due to an unexpected code pattern. If you are using new or unconventional syntax, consider using other syntax.</summary>
        internal static string @AnalysisFailedDescription => GetResourceString("AnalysisFailedDescription", @"The analysis required to generate code for this interface or method has failed due to an unexpected code pattern. If you are using new or unconventional syntax, consider using other syntax.");
        /// <summary>Analysis of interface '{0}' has failed. ComInterfaceGenerator will not generate code for this interface.</summary>
        internal static string @AnalysisFailedInterfaceMessage => GetResourceString("AnalysisFailedInterfaceMessage", @"Analysis of interface '{0}' has failed. ComInterfaceGenerator will not generate code for this interface.");
        /// <summary>Analysis of method '{0}' has failed. ComInterfaceGenerator will not generate code for this method.</summary>
        internal static string @AnalysisFailedMethodMessage => GetResourceString("AnalysisFailedMethodMessage", @"Analysis of method '{0}' has failed. ComInterfaceGenerator will not generate code for this method.");
        /// <summary>Analysis for COM interface generation has failed.</summary>
        internal static string @AnalysisFailedTitle => GetResourceString("AnalysisFailedTitle", @"Analysis for COM interface generation has failed.");
        /// <summary>COM interface source generation requires all base COM interfaces to be valid interfaces. Fix any issues on the base interface to resolve this diagnostic.</summary>
        internal static string @BaseInterfaceCannotBeGeneratedDescription => GetResourceString("BaseInterfaceCannotBeGeneratedDescription", @"COM interface source generation requires all base COM interfaces to be valid interfaces. Fix any issues on the base interface to resolve this diagnostic.");
        /// <summary>COM interface {0} inherits from {1}, which has errors. ComInterfaceGenerator will not generate source for {0}.</summary>
        internal static string @BaseInterfaceCannotBeGeneratedMessage => GetResourceString("BaseInterfaceCannotBeGeneratedMessage", @"COM interface {0} inherits from {1}, which has errors. ComInterfaceGenerator will not generate source for {0}.");
        /// <summary>The base COM interface failed to generate source. Code will not be generated for this interface.</summary>
        internal static string @BaseInterfaceCannotBeGeneratedTitle => GetResourceString("BaseInterfaceCannotBeGeneratedTitle", @"The base COM interface failed to generate source. Code will not be generated for this interface.");
        /// <summary>A 'GeneratedComInterface' cannot specify 'ComInterfaceOptions.ManagedObjectWrapper' or 'ComInterfaceOptions.ComObjectWrapper' unless the base interface type did not specify options or specified at least the same options.</summary>
        internal static string @BaseInterfaceMustGenerateAtLeastSameWrappers => GetResourceString("BaseInterfaceMustGenerateAtLeastSameWrappers", @"A 'GeneratedComInterface' cannot specify 'ComInterfaceOptions.ManagedObjectWrapper' or 'ComInterfaceOptions.ComObjectWrapper' unless the base interface type did not specify options or specified at least the same options.");
        /// <summary>When the 'Managed to Unmanaged with Caller-Allocated Buffer' shape is used by providing a 'FromManaged' method that takes a 'Span&lt;T&gt;' on the marshaller type, the type must provide a static 'BufferSize' property to provide the number of elements in the call ...</summary>
        internal static string @CallerAllocFromManagedMustHaveBufferSizeDescription => GetResourceString("CallerAllocFromManagedMustHaveBufferSizeDescription", @"When the 'Managed to Unmanaged with Caller-Allocated Buffer' shape is used by providing a 'FromManaged' method that takes a 'Span<T>' on the marshaller type, the type must provide a static 'BufferSize' property to provide the number of elements in the caller-allocated buffer.");
        /// <summary>The marshaller type '{0}' must have a static read-only 'int' 'BufferSize' property to specify the size of the caller-allocated buffer because it has a FromManaged method that takes a caller-allocated 'Span&lt;{1}&gt;'</summary>
        internal static string @CallerAllocFromManagedMustHaveBufferSizeMessage => GetResourceString("CallerAllocFromManagedMustHaveBufferSizeMessage", @"The marshaller type '{0}' must have a static read-only 'int' 'BufferSize' property to specify the size of the caller-allocated buffer because it has a FromManaged method that takes a caller-allocated 'Span<{1}>'");
        /// <summary>The generated 'DllImportAttribute' will not have a value corresponding to '{0}'.</summary>
        internal static string @CannotForwardToDllImportDescription => GetResourceString("CannotForwardToDllImportDescription", @"The generated 'DllImportAttribute' will not have a value corresponding to '{0}'.");
        /// <summary>'{0}' has no equivalent in 'DllImportAttribute' and will not be forwarded</summary>
        internal static string @CannotForwardToDllImportMessage => GetResourceString("CannotForwardToDllImportMessage", @"'{0}' has no equivalent in 'DllImportAttribute' and will not be forwarded");
        /// <summary>Specified 'LibraryImportAttribute' arguments cannot be forwarded to 'DllImportAttribute'</summary>
        internal static string @CannotForwardToDllImportTitle => GetResourceString("CannotForwardToDllImportTitle", @"Specified 'LibraryImportAttribute' arguments cannot be forwarded to 'DllImportAttribute'");
        /// <summary>Casting between a 'ComImport' type and a source-generated COM type is not supported and will fail at runtime</summary>
        internal static string @CastsBetweenRuntimeComAndSourceGeneratedComNotSupportedDescription => GetResourceString("CastsBetweenRuntimeComAndSourceGeneratedComNotSupportedDescription", @"Casting between a 'ComImport' type and a source-generated COM type is not supported and will fail at runtime");
        /// <summary>Casting between a 'ComImport' type and a source-generated COM type is not supported</summary>
        internal static string @CastsBetweenRuntimeComAndSourceGeneratedComNotSupportedMessage => GetResourceString("CastsBetweenRuntimeComAndSourceGeneratedComNotSupportedMessage", @"Casting between a 'ComImport' type and a source-generated COM type is not supported");
        /// <summary>Casting between a 'ComImport' type and a source-generated COM type is not supported</summary>
        internal static string @CastsBetweenRuntimeComAndSourceGeneratedComNotSupportedTitle => GetResourceString("CastsBetweenRuntimeComAndSourceGeneratedComNotSupportedTitle", @"Casting between a 'ComImport' type and a source-generated COM type is not supported");
        /// <summary>A class with 'GeneratedComClassAttribute' must implement at least one interface with 'GeneratedComInterfaceAttribute' or else the generated code with not have an effect.</summary>
        internal static string @ClassDoesNotImplementAnyGeneratedComInterfacesDescription => GetResourceString("ClassDoesNotImplementAnyGeneratedComInterfacesDescription", @"A class with 'GeneratedComClassAttribute' must implement at least one interface with 'GeneratedComInterfaceAttribute' or else the generated code with not have an effect.");
        /// <summary>Class '{0}' with 'GeneratedComClassAttribute' does not implement any interfaces with 'GeneratedComInterfaceAttribute'. Source will not be generated for '{0}'.</summary>
        internal static string @ClassDoesNotImplementAnyGeneratedComInterfacesMessage => GetResourceString("ClassDoesNotImplementAnyGeneratedComInterfacesMessage", @"Class '{0}' with 'GeneratedComClassAttribute' does not implement any interfaces with 'GeneratedComInterfaceAttribute'. Source will not be generated for '{0}'.");
        /// <summary>.NET COM hosting with 'EnableComHosting' only supports built-in COM interop. It does not support source-generated COM interop with 'GeneratedComInterfaceAttribute'.</summary>
        internal static string @ComHostingDoesNotSupportGeneratedComInterfaceDescription => GetResourceString("ComHostingDoesNotSupportGeneratedComInterfaceDescription", @".NET COM hosting with 'EnableComHosting' only supports built-in COM interop. It does not support source-generated COM interop with 'GeneratedComInterfaceAttribute'.");
        /// <summary>.NET COM hosting with 'EnableComHosting' does not support interfaces with the 'GeneratedComInterfaceAttribute'. Change any COM exposed interfaces implemented by '{0}' to use the 'System.Runtime.InteropServices.ComVisibleAttribute' instead</summary>
        internal static string @ComHostingDoesNotSupportGeneratedComInterfaceMessage => GetResourceString("ComHostingDoesNotSupportGeneratedComInterfaceMessage", @".NET COM hosting with 'EnableComHosting' does not support interfaces with the 'GeneratedComInterfaceAttribute'. Change any COM exposed interfaces implemented by '{0}' to use the 'System.Runtime.InteropServices.ComVisibleAttribute' instead");
        /// <summary>.NET COM hosting with 'EnableComHosting' does not support interfaces with the 'GeneratedComInterfaceAttribute'</summary>
        internal static string @ComHostingDoesNotSupportGeneratedComInterfaceTitle => GetResourceString("ComHostingDoesNotSupportGeneratedComInterfaceTitle", @".NET COM hosting with 'EnableComHosting' does not support interfaces with the 'GeneratedComInterfaceAttribute'");
        /// <summary>Source-generated P/Invokes will ignore any configuration that is not supported.</summary>
        internal static string @ConfigurationNotSupportedDescriptionLibraryImport => GetResourceString("ConfigurationNotSupportedDescriptionLibraryImport", @"Source-generated P/Invokes will ignore any configuration that is not supported.");
        /// <summary>Source-generated COM will ignore any configuration that is not supported.</summary>
        internal static string @ConfigurationNotSupportedDescriptionCom => GetResourceString("ConfigurationNotSupportedDescriptionCom", @"Source-generated COM will ignore any configuration that is not supported.");
        /// <summary>The '{0}' configuration is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular 'DllImport' instead.</summary>
        internal static string @ConfigurationNotSupportedMessageLibraryImport => GetResourceString("ConfigurationNotSupportedMessageLibraryImport", @"The '{0}' configuration is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular 'DllImport' instead.");
        /// <summary>The '{0}' configuration is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.</summary>
        internal static string @ConfigurationNotSupportedMessageCom => GetResourceString("ConfigurationNotSupportedMessageCom", @"The '{0}' configuration is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.");
        /// <summary>The specified marshalling configuration is not supported by source-generated P/Invokes. {0}.</summary>
        internal static string @ConfigurationNotSupportedMessageMarshallingInfoLibraryImport => GetResourceString("ConfigurationNotSupportedMessageMarshallingInfoLibraryImport", @"The specified marshalling configuration is not supported by source-generated P/Invokes. {0}.");
        /// <summary>The specified marshalling configuration is not supported by source-generated COM. {0}.</summary>
        internal static string @ConfigurationNotSupportedMessageMarshallingInfoCom => GetResourceString("ConfigurationNotSupportedMessageMarshallingInfoCom", @"The specified marshalling configuration is not supported by source-generated COM. {0}.");
        /// <summary>The specified '{0}' configuration for parameter '{1}' is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular 'DllImport' instead.</summary>
        internal static string @ConfigurationNotSupportedMessageParameterLibraryImport => GetResourceString("ConfigurationNotSupportedMessageParameterLibraryImport", @"The specified '{0}' configuration for parameter '{1}' is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular 'DllImport' instead.");
        /// <summary>The specified '{0}' configuration for parameter '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.</summary>
        internal static string @ConfigurationNotSupportedMessageParameterCom => GetResourceString("ConfigurationNotSupportedMessageParameterCom", @"The specified '{0}' configuration for parameter '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.");
        /// <summary>The specified '{0}' configuration for the return value of method '{1}' is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular 'DllImport' instead.</summary>
        internal static string @ConfigurationNotSupportedMessageReturnLibraryImport => GetResourceString("ConfigurationNotSupportedMessageReturnLibraryImport", @"The specified '{0}' configuration for the return value of method '{1}' is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular 'DllImport' instead.");
        /// <summary>The specified '{0}' configuration for the return value of method '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.</summary>
        internal static string @ConfigurationNotSupportedMessageReturnCom => GetResourceString("ConfigurationNotSupportedMessageReturnCom", @"The specified '{0}' configuration for the return value of method '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.");
        /// <summary>The specified value '{0}' for '{1}' is not supported by source-generated P/Invokes. If the specified value is required, use a regular 'DllImport' instead.</summary>
        internal static string @ConfigurationNotSupportedMessageValueLibraryImport => GetResourceString("ConfigurationNotSupportedMessageValueLibraryImport", @"The specified value '{0}' for '{1}' is not supported by source-generated P/Invokes. If the specified value is required, use a regular 'DllImport' instead.");
        /// <summary>The specified value '{0}' for '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.</summary>
        internal static string @ConfigurationNotSupportedMessageValueCom => GetResourceString("ConfigurationNotSupportedMessageValueCom", @"The specified value '{0}' for '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.");
        /// <summary>Specified configuration is not supported by source-generated P/Invokes.</summary>
        internal static string @ConfigurationNotSupportedTitleLibraryImport => GetResourceString("ConfigurationNotSupportedTitleLibraryImport", @"Specified configuration is not supported by source-generated P/Invokes.");
        /// <summary>Specified configuration is not supported by source-generated COM.</summary>
        internal static string @ConfigurationNotSupportedTitleCom => GetResourceString("ConfigurationNotSupportedTitleCom", @"Specified configuration is not supported by source-generated COM.");
        /// <summary>Converting this interface to use 'GeneratedComInterfaceAttribute' may produce invalid code and may require additional work</summary>
        internal static string @ConvertComInterfaceMayProduceInvalidCode => GetResourceString("ConvertComInterfaceMayProduceInvalidCode", @"Converting this interface to use 'GeneratedComInterfaceAttribute' may produce invalid code and may require additional work");
        /// <summary>Automatically converting a P/Invoke with 'PreserveSig' set to 'false' to a source-generated P/Invoke may produce invalid code</summary>
        internal static string @ConvertNoPreserveSigDllImportToGeneratedMayProduceInvalidCode => GetResourceString("ConvertNoPreserveSigDllImportToGeneratedMayProduceInvalidCode", @"Automatically converting a P/Invoke with 'PreserveSig' set to 'false' to a source-generated P/Invoke may produce invalid code");
        /// <summary>Convert to 'GeneratedComInterface' and allow unsafe code</summary>
        internal static string @ConvertToGeneratedComInterfaceAddUnsafe => GetResourceString("ConvertToGeneratedComInterfaceAddUnsafe", @"Convert to 'GeneratedComInterface' and allow unsafe code");
        /// <summary>Use 'GeneratedComInterfaceAttribute' instead of 'ComImportAttribute' to generate COM marshalling code at compile time</summary>
        internal static string @ConvertToGeneratedComInterfaceDescription => GetResourceString("ConvertToGeneratedComInterfaceDescription", @"Use 'GeneratedComInterfaceAttribute' instead of 'ComImportAttribute' to generate COM marshalling code at compile time");
        /// <summary>Converting this API to 'GeneratedComInterfaceAttribute' will require additional code to provide custom marshallers for some parameters.</summary>
        internal static string @ConvertToGeneratedComInterfaceMayRequireCustomMarshalling => GetResourceString("ConvertToGeneratedComInterfaceMayRequireCustomMarshalling", @"Converting this API to 'GeneratedComInterfaceAttribute' will require additional code to provide custom marshallers for some parameters.");
        /// <summary>Mark the type '{0}' with 'GeneratedComInterfaceAttribute' instead of 'ComImportAttribute' to generate COM marshalling code at compile time</summary>
        internal static string @ConvertToGeneratedComInterfaceMessage => GetResourceString("ConvertToGeneratedComInterfaceMessage", @"Mark the type '{0}' with 'GeneratedComInterfaceAttribute' instead of 'ComImportAttribute' to generate COM marshalling code at compile time");
        /// <summary>Convert to 'GeneratedComInterface'</summary>
        internal static string @ConvertToGeneratedComInterfaceTitle => GetResourceString("ConvertToGeneratedComInterfaceTitle", @"Convert to 'GeneratedComInterface'");
        /// <summary>Convert to 'LibraryImport'</summary>
        internal static string @ConvertToLibraryImport => GetResourceString("ConvertToLibraryImport", @"Convert to 'LibraryImport'");
        /// <summary>Convert to 'LibraryImport' and enable unsafe code</summary>
        internal static string @ConvertToLibraryImportAddUnsafe => GetResourceString("ConvertToLibraryImportAddUnsafe", @"Convert to 'LibraryImport' and enable unsafe code");
        /// <summary>Use 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time</summary>
        internal static string @ConvertToLibraryImportDescription => GetResourceString("ConvertToLibraryImportDescription", @"Use 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time");
        /// <summary>Converting this API to 'LibraryImport' will require additional code to provide custom marshallers for some parameters.</summary>
        internal static string @ConvertToLibraryImportMayRequireCustomMarshalling => GetResourceString("ConvertToLibraryImportMayRequireCustomMarshalling", @"Converting this API to 'LibraryImport' will require additional code to provide custom marshallers for some parameters.");
        /// <summary>Mark the method '{0}' with 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time</summary>
        internal static string @ConvertToLibraryImportMessage => GetResourceString("ConvertToLibraryImportMessage", @"Mark the method '{0}' with 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time");
        /// <summary>Use 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time</summary>
        internal static string @ConvertToLibraryImportTitle => GetResourceString("ConvertToLibraryImportTitle", @"Use 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time");
        /// <summary>Convert to 'LibraryImport' with '{0}' suffix</summary>
        internal static string @ConvertToLibraryImportWithSuffix => GetResourceString("ConvertToLibraryImportWithSuffix", @"Convert to 'LibraryImport' with '{0}' suffix");
        /// <summary>Convert to 'LibraryImport' with '{0}' suffix and enable unsafe code</summary>
        internal static string @ConvertToLibraryImportWithSuffixAddUnsafe => GetResourceString("ConvertToLibraryImportWithSuffixAddUnsafe", @"Convert to 'LibraryImport' with '{0}' suffix and enable unsafe code");
        /// <summary>Marshaller type does not have the required shape</summary>
        internal static string @CustomMarshallerTypeMustHaveRequiredShapeTitle => GetResourceString("CustomMarshallerTypeMustHaveRequiredShapeTitle", @"Marshaller type does not have the required shape");
        /// <summary>A marshaller for an element scenario cannot be stateful.</summary>
        internal static string @ElementMarshallerCannotBeStatefulDescription => GetResourceString("ElementMarshallerCannotBeStatefulDescription", @"A marshaller for an element scenario cannot be stateful.");
        /// <summary>The specified marshaller type '{0}' is a stateful marshaller, but stateful marshallers are not allowed in the provided marshal mode '{1}'</summary>
        internal static string @ElementMarshallerCannotBeStatefulMessage => GetResourceString("ElementMarshallerCannotBeStatefulMessage", @"The specified marshaller type '{0}' is a stateful marshaller, but stateful marshallers are not allowed in the provided marshal mode '{1}'");
        /// <summary>The element type of the span returned by the first method must be the same type as the element type of the span returned by the second method.</summary>
        internal static string @ElementTypesOfReturnTypesMustMatchDescription => GetResourceString("ElementTypesOfReturnTypesMustMatchDescription", @"The element type of the span returned by the first method must be the same type as the element type of the span returned by the second method.");
        /// <summary>The element type of the span returned by '{0}' must be the same type as the element type of the span returned by '{1}'.</summary>
        internal static string @ElementTypesOfReturnTypesMustMatchMessage => GetResourceString("ElementTypesOfReturnTypesMustMatchMessage", @"The element type of the span returned by '{0}' must be the same type as the element type of the span returned by '{1}'.");
        /// <summary>An entry-point type for marshalling a given type must not be 'null'.</summary>
        internal static string @EntryPointTypeMustBeNonNullDescription => GetResourceString("EntryPointTypeMustBeNonNullDescription", @"An entry-point type for marshalling a given type must not be 'null'.");
        /// <summary>The entry-point marshaller type for the type '{0}' must be not 'null'</summary>
        internal static string @EntryPointTypeMustBeNonNullMessage => GetResourceString("EntryPointTypeMustBeNonNullMessage", @"The entry-point marshaller type for the type '{0}' must be not 'null'");
        /// <summary>An entry-point type for marshalling a given type must have a 'System.Runtime.InteropServices.CustomMarshallerAttribute' that specifies this type as the managed type.</summary>
        internal static string @EntryPointTypeMustHaveCustomMarshallerAttributeWithMatchingManagedTypeDescription => GetResourceString("EntryPointTypeMustHaveCustomMarshallerAttributeWithMatchingManagedTypeDescription", @"An entry-point type for marshalling a given type must have a 'System.Runtime.InteropServices.CustomMarshallerAttribute' that specifies this type as the managed type.");
        /// <summary>The entry-point marshaller type '{0}' for the type '{1}' must be a type with at least one 'System.Runtime.InteropServices.CustomMarshallerAttribute' that specifies this type as the managed type</summary>
        internal static string @EntryPointTypeMustHaveCustomMarshallerAttributeWithMatchingManagedTypeMessage => GetResourceString("EntryPointTypeMustHaveCustomMarshallerAttributeWithMatchingManagedTypeMessage", @"The entry-point marshaller type '{0}' for the type '{1}' must be a type with at least one 'System.Runtime.InteropServices.CustomMarshallerAttribute' that specifies this type as the managed type");
        /// <summary>The first parameter of the first method must be the same type as the return types of the second method.</summary>
        internal static string @FirstParameterMustMatchReturnTypeDescription => GetResourceString("FirstParameterMustMatchReturnTypeDescription", @"The first parameter of the first method must be the same type as the return types of the second method.");
        /// <summary>The first parameter of '{0}' must be the same type as the return type of '{1}'</summary>
        internal static string @FirstParameterMustMatchReturnTypeMessage => GetResourceString("FirstParameterMustMatchReturnTypeMessage", @"The first parameter of '{0}' must be the same type as the return type of '{1}'");
        /// <summary>The first parameters of the two methods must be the same type.</summary>
        internal static string @FirstParametersMustMatchDescription => GetResourceString("FirstParametersMustMatchDescription", @"The first parameters of the two methods must be the same type.");
        /// <summary>The first parameter of '{0}' and '{1}' must be the same type</summary>
        internal static string @FirstParametersMustMatchMessage => GetResourceString("FirstParametersMustMatchMessage", @"The first parameter of '{0}' and '{1}' must be the same type");
        /// <summary>Overloading the 'FromUnmanaged' method is unuspported as some shapes are unable to distinguish between overloads.</summary>
        internal static string @FromUnmanagedOverloadsNotSupportedDescription => GetResourceString("FromUnmanagedOverloadsNotSupportedDescription", @"Overloading the 'FromUnmanaged' method is unuspported as some shapes are unable to distinguish between overloads.");
        /// <summary>The type '{0}' overloads the 'FromUnmanaged' method, which is not supported in custom marshallers</summary>
        internal static string @FromUnmanagedOverloadsNotSupportedMessage => GetResourceString("FromUnmanagedOverloadsNotSupportedMessage", @"The type '{0}' overloads the 'FromUnmanaged' method, which is not supported in custom marshallers");
        /// <summary>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' must match the base COM interface.</summary>
        internal static string @GeneratedComInterfaceStringMarshallingMustMatchBase => GetResourceString("GeneratedComInterfaceStringMarshallingMustMatchBase", @"The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' must match the base COM interface.");
        /// <summary>The marshaller type must be a closed generic or have the same number of generic parameters as the managed type so the emitted code can use a specific instantiation.</summary>
        internal static string @GenericEntryPointMarshallerTypeMustBeClosedOrMatchArityDescription => GetResourceString("GenericEntryPointMarshallerTypeMustBeClosedOrMatchArityDescription", @"The marshaller type must be a closed generic or have the same number of generic parameters as the managed type so the emitted code can use a specific instantiation.");
        /// <summary>The marshaller type '{0}' for managed type '{1}' must be a closed generic type, have the same arity as the managed type if it is a value marshaller, or have one additional generic parameter if it is a collection marshaller.</summary>
        internal static string @GenericEntryPointMarshallerTypeMustBeClosedOrMatchArityMessage => GetResourceString("GenericEntryPointMarshallerTypeMustBeClosedOrMatchArityMessage", @"The marshaller type '{0}' for managed type '{1}' must be a closed generic type, have the same arity as the managed type if it is a value marshaller, or have one additional generic parameter if it is a collection marshaller.");
        /// <summary>The return type of 'GetPinnableReference' (after accounting for 'ref') must be blittable.</summary>
        internal static string @GetPinnableReferenceReturnTypeBlittableDescription => GetResourceString("GetPinnableReferenceReturnTypeBlittableDescription", @"The return type of 'GetPinnableReference' (after accounting for 'ref') must be blittable.");
        /// <summary>The dereferenced type of the return type of the 'GetPinnableReference' method must be blittable</summary>
        internal static string @GetPinnableReferenceReturnTypeBlittableMessage => GetResourceString("GetPinnableReferenceReturnTypeBlittableMessage", @"The dereferenced type of the return type of the 'GetPinnableReference' method must be blittable");
        /// <summary>Events are not a concept in COM, so no interop code will be source generated for instance events on source-generated COM interfaces.</summary>
        internal static string @InstanceEventDeclaredInInterfaceDescription => GetResourceString("InstanceEventDeclaredInInterfaceDescription", @"Events are not a concept in COM, so no interop code will be source generated for instance events on source-generated COM interfaces.");
        /// <summary>The instance event '{0}' is declared in the interface '{1}', which has the 'GeneratedComInterfaceAttribute' applied</summary>
        internal static string @InstanceEventDeclaredInInterfaceMessage => GetResourceString("InstanceEventDeclaredInInterfaceMessage", @"The instance event '{0}' is declared in the interface '{1}', which has the 'GeneratedComInterfaceAttribute' applied");
        /// <summary>Declaring an instance event in a type with the 'GeneratedComInterfaceAttribute' is not supported</summary>
        internal static string @InstanceEventDeclaredInInterfaceTitle => GetResourceString("InstanceEventDeclaredInInterfaceTitle", @"Declaring an instance event in a type with the 'GeneratedComInterfaceAttribute' is not supported");
        /// <summary>Properties are not a concept in COM, so no interop code will be source generated for instance properties on source-generated COM interfaces.</summary>
        internal static string @InstancePropertyDeclaredInInterfaceDescription => GetResourceString("InstancePropertyDeclaredInInterfaceDescription", @"Properties are not a concept in COM, so no interop code will be source generated for instance properties on source-generated COM interfaces.");
        /// <summary>The instance property '{0}' is declared in the interface '{1}', which has the 'GeneratedComInterfaceAttribute' applied</summary>
        internal static string @InstancePropertyDeclaredInInterfaceMessage => GetResourceString("InstancePropertyDeclaredInInterfaceMessage", @"The instance property '{0}' is declared in the interface '{1}', which has the 'GeneratedComInterfaceAttribute' applied");
        /// <summary>Declaring an instance property in a type with the 'GeneratedComInterfaceAttribute' is not supported</summary>
        internal static string @InstancePropertyDeclaredInInterfaceTitle => GetResourceString("InstancePropertyDeclaredInInterfaceTitle", @"Declaring an instance property in a type with the 'GeneratedComInterfaceAttribute' is not supported");
        /// <summary>Using 'GeneratedComInterfaceAttribute' and 'InterfaceTypeAttribute' is not supported with 'ComInterfaceType' value '{0}'.</summary>
        internal static string @InterfaceTypeNotSupportedMessage => GetResourceString("InterfaceTypeNotSupportedMessage", @"Using 'GeneratedComInterfaceAttribute' and 'InterfaceTypeAttribute' is not supported with 'ComInterfaceType' value '{0}'.");
        /// <summary>'GeneratedComInterfaceType' does not support the 'ComInterfaceType' value supplied to 'InterfaceTypeAttribute' on the same type.</summary>
        internal static string @InterfaceTypeNotSupportedTitle => GetResourceString("InterfaceTypeNotSupportedTitle", @"'GeneratedComInterfaceType' does not support the 'ComInterfaceType' value supplied to 'InterfaceTypeAttribute' on the same type.");
        /// <summary>Method '{0}' is contained in a type '{1}' that is not marked 'partial'. P/Invoke source generation will ignore method '{0}'.</summary>
        internal static string @InvalidAttributedMethodContainingTypeMissingModifiersMessageLibraryImport => GetResourceString("InvalidAttributedMethodContainingTypeMissingModifiersMessageLibraryImport", @"Method '{0}' is contained in a type '{1}' that is not marked 'partial'. P/Invoke source generation will ignore method '{0}'.");
        /// <summary>Method '{0}' is contained in a type '{1}' that is not marked 'partial'. COM source generation will ignore method '{0}'.</summary>
        internal static string @InvalidAttributedMethodContainingTypeMissingModifiersMessageCom => GetResourceString("InvalidAttributedMethodContainingTypeMissingModifiersMessageCom", @"Method '{0}' is contained in a type '{1}' that is not marked 'partial'. COM source generation will ignore method '{0}'.");
        /// <summary>Containing type of method with VirtualMethodIndexAttribute does not have a UnmanagedObjectUnwrapperAttribute.</summary>
        internal static string @InvalidAttributedMethodContainingTypeMissingUnmanagedObjectUnwrapperAttributeMessage => GetResourceString("InvalidAttributedMethodContainingTypeMissingUnmanagedObjectUnwrapperAttributeMessage", @"Containing type of method with VirtualMethodIndexAttribute does not have a UnmanagedObjectUnwrapperAttribute.");
        /// <summary>Methods marked with 'LibraryImportAttribute' should be 'static', 'partial', and non-generic. P/Invoke source generation will ignore methods that are non-'static', non-'partial', or generic.</summary>
        internal static string @InvalidAttributedMethodDescriptionLibraryImport => GetResourceString("InvalidAttributedMethodDescriptionLibraryImport", @"Methods marked with 'LibraryImportAttribute' should be 'static', 'partial', and non-generic. P/Invoke source generation will ignore methods that are non-'static', non-'partial', or generic.");
        /// <summary>Methods on interfaces marked with 'GeneratedComInterfaceAttribute' should be non-generic. COM source generation will ignore methods that are generic.</summary>
        internal static string @InvalidAttributedMethodDescriptionCom => GetResourceString("InvalidAttributedMethodDescriptionCom", @"Methods on interfaces marked with 'GeneratedComInterfaceAttribute' should be non-generic. COM source generation will ignore methods that are generic.");
        /// <summary>Method '{0}' should be 'static', 'partial', and non-generic when marked with 'LibraryImportAttribute'. P/Invoke source generation will ignore method '{0}'.</summary>
        internal static string @InvalidAttributedMethodSignatureMessageLibraryImport => GetResourceString("InvalidAttributedMethodSignatureMessageLibraryImport", @"Method '{0}' should be 'static', 'partial', and non-generic when marked with 'LibraryImportAttribute'. P/Invoke source generation will ignore method '{0}'.");
        /// <summary>Method '{0}' should be non-generic when on interfaces marked with the 'GeneratedComInterfaceAttribute'. COM source generation will ignore method '{0}'.</summary>
        internal static string @InvalidAttributedMethodSignatureMessageCom => GetResourceString("InvalidAttributedMethodSignatureMessageCom", @"Method '{0}' should be non-generic when on interfaces marked with the 'GeneratedComInterfaceAttribute'. COM source generation will ignore method '{0}'.");
        /// <summary>Invalid 'CustomMarshallerAttribute' usage</summary>
        internal static string @InvalidCustomMarshallerAttributeUsageTitle => GetResourceString("InvalidCustomMarshallerAttributeUsageTitle", @"Invalid 'CustomMarshallerAttribute' usage");
        /// <summary>The configuration of 'ExceptionMarshalling' and 'ExceptionMarshallingCustomType' is invalid.</summary>
        internal static string @InvalidExceptionMarshallingConfigurationDescription => GetResourceString("InvalidExceptionMarshallingConfigurationDescription", @"The configuration of 'ExceptionMarshalling' and 'ExceptionMarshallingCustomType' is invalid.");
        /// <summary>The configuration of 'ExceptionMarshalling' and 'ExceptionMarshallingCustomType' on method '{0}' is invalid. {1}</summary>
        internal static string @InvalidExceptionMarshallingConfigurationMessage => GetResourceString("InvalidExceptionMarshallingConfigurationMessage", @"The configuration of 'ExceptionMarshalling' and 'ExceptionMarshallingCustomType' on method '{0}' is invalid. {1}");
        /// <summary>'ExceptionMarshallingCustomType' must be specified when 'ExceptionMarshalling' is set to 'ExceptionMarshalling.Custom'.</summary>
        internal static string @InvalidExceptionMarshallingConfigurationMissingCustomType => GetResourceString("InvalidExceptionMarshallingConfigurationMissingCustomType", @"'ExceptionMarshallingCustomType' must be specified when 'ExceptionMarshalling' is set to 'ExceptionMarshalling.Custom'.");
        /// <summary>'ExceptionMarshalling' should be set to 'ExceptionMarshalling.Custom' when 'ExceptionMarshallingCustomType' is specified.</summary>
        internal static string @InvalidExceptionMarshallingConfigurationNotCustom => GetResourceString("InvalidExceptionMarshallingConfigurationNotCustom", @"'ExceptionMarshalling' should be set to 'ExceptionMarshalling.Custom' when 'ExceptionMarshallingCustomType' is specified.");
        /// <summary>The provided value is not a known flag of the 'ExceptionMarshalling' enum.</summary>
        internal static string @InvalidExceptionMarshallingValue => GetResourceString("InvalidExceptionMarshallingValue", @"The provided value is not a known flag of the 'ExceptionMarshalling' enum.");
        /// <summary>Classes with 'GeneratedComClassAttribute' must implement one or more interfaces with 'GeneratedComInterfaceAttribute', be marked partial, and be non-generic.</summary>
        internal static string @InvalidGeneratedComClassAttributeUsageDescription => GetResourceString("InvalidGeneratedComClassAttributeUsageDescription", @"Classes with 'GeneratedComClassAttribute' must implement one or more interfaces with 'GeneratedComInterfaceAttribute', be marked partial, and be non-generic.");
        /// <summary>Class '{0}' with 'GeneratedComClassAttribute' or one of its containing types is not marked 'partial'.</summary>
        internal static string @InvalidGeneratedComClassAttributeUsageMissingPartialModifier => GetResourceString("InvalidGeneratedComClassAttributeUsageMissingPartialModifier", @"Class '{0}' with 'GeneratedComClassAttribute' or one of its containing types is not marked 'partial'.");
        /// <summary>Invalid 'GeneratedComClassAttribute' usage</summary>
        internal static string @InvalidGeneratedComClassAttributeUsageTitle => GetResourceString("InvalidGeneratedComClassAttributeUsageTitle", @"Invalid 'GeneratedComClassAttribute' usage");
        /// <summary>Interfaces attributed with 'GeneratedComInterfaceAttribute' must have 'public' or 'internal' accessibility and be partial, non-generic, and must specify a GUID with 'System.Runtime.InteropServices.GuidAttribute'.</summary>
        internal static string @InvalidGeneratedComInterfaceAttributeUsageDescription => GetResourceString("InvalidGeneratedComInterfaceAttributeUsageDescription", @"Interfaces attributed with 'GeneratedComInterfaceAttribute' must have 'public' or 'internal' accessibility and be partial, non-generic, and must specify a GUID with 'System.Runtime.InteropServices.GuidAttribute'.");
        /// <summary>Interface '{0}' is attributed with 'GeneratedComInterfaceAttribute' but is generic.</summary>
        internal static string @InvalidGeneratedComInterfaceAttributeUsageInterfaceIsGeneric => GetResourceString("InvalidGeneratedComInterfaceAttributeUsageInterfaceIsGeneric", @"Interface '{0}' is attributed with 'GeneratedComInterfaceAttribute' but is generic.");
        /// <summary>Interface '{0}' is attributed with 'GeneratedComInterfaceAttribute' but is not accessible by generated code. The interface and all containing types must have accessibility 'internal' or 'public' for generated code to access it. {1}</summary>
        internal static string @InvalidGeneratedComInterfaceAttributeUsageInterfaceNotAccessible => GetResourceString("InvalidGeneratedComInterfaceAttributeUsageInterfaceNotAccessible", @"Interface '{0}' is attributed with 'GeneratedComInterfaceAttribute' but is not accessible by generated code. The interface and all containing types must have accessibility 'internal' or 'public' for generated code to access it. {1}");
        /// <summary>Interface '{0}' is attributed with 'GeneratedComInterfaceAttribute' but is missing 'System.Runtime.InteropServices.GuidAttribute'.</summary>
        internal static string @InvalidGeneratedComInterfaceAttributeUsageMissingGuidAttribute => GetResourceString("InvalidGeneratedComInterfaceAttributeUsageMissingGuidAttribute", @"Interface '{0}' is attributed with 'GeneratedComInterfaceAttribute' but is missing 'System.Runtime.InteropServices.GuidAttribute'.");
        /// <summary>Invalid 'GeneratedComInterfaceAttribute' usage.</summary>
        internal static string @InvalidGeneratedComInterfaceAttributeUsageTitle => GetResourceString("InvalidGeneratedComInterfaceAttributeUsageTitle", @"Invalid 'GeneratedComInterfaceAttribute' usage.");
        /// <summary>The interface '{0}' or one of its containing types is missing the 'partial' keyword. Code will not be generated for '{0}'.</summary>
        internal static string @InvalidGeneratedComInterfaceUsageMissingPartialModifier => GetResourceString("InvalidGeneratedComInterfaceUsageMissingPartialModifier", @"The interface '{0}' or one of its containing types is missing the 'partial' keyword. Code will not be generated for '{0}'.");
        /// <summary>Invalid 'LibraryImportAttribute' usage</summary>
        internal static string @InvalidLibraryImportAttributeUsageTitle => GetResourceString("InvalidLibraryImportAttributeUsageTitle", @"Invalid 'LibraryImportAttribute' usage");
        /// <summary>Specified managed type is invalid</summary>
        internal static string @InvalidManagedTypeTitle => GetResourceString("InvalidManagedTypeTitle", @"Specified managed type is invalid");
        /// <summary>Specified marshaller type is invalid</summary>
        internal static string @InvalidMarshallerTypeTitle => GetResourceString("InvalidMarshallerTypeTitle", @"Specified marshaller type is invalid");
        /// <summary>Invalid 'MarshalMode' value.</summary>
        internal static string @InvalidMarshalModeTitle => GetResourceString("InvalidMarshalModeTitle", @"Invalid 'MarshalMode' value.");
        /// <summary>Invalid 'NativeMarshallingAttribute' usage</summary>
        internal static string @InvalidNativeMarshallingAttributeUsageTitle => GetResourceString("InvalidNativeMarshallingAttributeUsageTitle", @"Invalid 'NativeMarshallingAttribute' usage");
        /// <summary>The specified 'ComInterfaceOptions' are invalid.</summary>
        internal static string @InvalidOptionsOnInterfaceDescription => GetResourceString("InvalidOptionsOnInterfaceDescription", @"The specified 'ComInterfaceOptions' are invalid.");
        /// <summary>The specified 'ComInterfaceOptions' on '{0}' are invalid. {1}</summary>
        internal static string @InvalidOptionsOnInterfaceMessage => GetResourceString("InvalidOptionsOnInterfaceMessage", @"The specified 'ComInterfaceOptions' on '{0}' are invalid. {1}");
        /// <summary>Marshaller type has incompatible method signatures</summary>
        internal static string @InvalidSignaturesInMarshallerShapeTitle => GetResourceString("InvalidSignaturesInMarshallerShapeTitle", @"Marshaller type has incompatible method signatures");
        /// <summary>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' is invalid.</summary>
        internal static string @InvalidStringMarshallingConfigurationDescription => GetResourceString("InvalidStringMarshallingConfigurationDescription", @"The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' is invalid.");
        /// <summary>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on method '{0}' is invalid. {1}</summary>
        internal static string @InvalidStringMarshallingConfigurationMessageLibraryImport => GetResourceString("InvalidStringMarshallingConfigurationMessageLibraryImport", @"The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on method '{0}' is invalid. {1}");
        /// <summary>'StringMarshallingCustomType' must be specified when 'StringMarshalling' is set to 'StringMarshalling.Custom'.</summary>
        internal static string @InvalidStringMarshallingConfigurationMissingCustomType => GetResourceString("InvalidStringMarshallingConfigurationMissingCustomType", @"'StringMarshallingCustomType' must be specified when 'StringMarshalling' is set to 'StringMarshalling.Custom'.");
        /// <summary>'StringMarshalling' should be set to 'StringMarshalling.Custom' when 'StringMarshallingCustomType' is specified.</summary>
        internal static string @InvalidStringMarshallingConfigurationNotCustom => GetResourceString("InvalidStringMarshallingConfigurationNotCustom", @"'StringMarshalling' should be set to 'StringMarshalling.Custom' when 'StringMarshallingCustomType' is specified.");
        /// <summary>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on interface '{0}' is invalid. {1}</summary>
        internal static string @InvalidStringMarshallingConfigurationOnInterfaceMessage => GetResourceString("InvalidStringMarshallingConfigurationOnInterfaceMessage", @"The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on interface '{0}' is invalid. {1}");
        /// <summary>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on method '{0}' is invalid. {1}</summary>
        internal static string @InvalidStringMarshallingConfigurationOnMethodMessage => GetResourceString("InvalidStringMarshallingConfigurationOnMethodMessage", @"The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on method '{0}' is invalid. {1}");
        /// <summary>Invalid 'VirtualMethodIndexAttribute' usage</summary>
        internal static string @InvalidVirtualMethodIndexAttributeUsage => GetResourceString("InvalidVirtualMethodIndexAttributeUsage", @"Invalid 'VirtualMethodIndexAttribute' usage");
        /// <summary>The element type of the 'ReadOnlySpan' returned by 'GetManagedValuesSource' must be the same as the element type returned by 'GetManagedValuesDestination'.</summary>
        internal static string @LinearCollectionElementTypesMustMatchDescription => GetResourceString("LinearCollectionElementTypesMustMatchDescription", @"The element type of the 'ReadOnlySpan' returned by 'GetManagedValuesSource' must be the same as the element type returned by 'GetManagedValuesDestination'.");
        /// <summary>The element type of the 'ReadOnlySpan' returned by 'GetManagedValuesSource' must be the same as the element type returned by 'GetManagedValuesDestination'</summary>
        internal static string @LinearCollectionElementTypesMustMatchMessage => GetResourceString("LinearCollectionElementTypesMustMatchMessage", @"The element type of the 'ReadOnlySpan' returned by 'GetManagedValuesSource' must be the same as the element type returned by 'GetManagedValuesDestination'");
        /// <summary>A 'LinearCollection'-kind native type that supports the 'CallerAllocatedBuffer' feature must provide a three-parameter constructor taking the managed type as the first parameter, a 'Span&lt;byte&gt;' as the second parameter, and the native size of the element as ...</summary>
        internal static string @LinearCollectionInCallerAllocatedBufferRequiresSpanConstructorDescription => GetResourceString("LinearCollectionInCallerAllocatedBufferRequiresSpanConstructorDescription", @"A 'LinearCollection'-kind native type that supports the 'CallerAllocatedBuffer' feature must provide a three-parameter constructor taking the managed type as the first parameter, a 'Span<byte>' as the second parameter, and the native size of the element as the third parameter");
        /// <summary>The type '{0}' specifies that it supports 'In' marshalling with the 'CallerAllocatedBuffer' feature for '{1}' but does not provide a three-parameter constructor that takes a '{1}' , a 'Span&lt;byte&gt;', and an 'int'</summary>
        internal static string @LinearCollectionInCallerAllocatedBufferRequiresSpanConstructorMessage => GetResourceString("LinearCollectionInCallerAllocatedBufferRequiresSpanConstructorMessage", @"The type '{0}' specifies that it supports 'In' marshalling with the 'CallerAllocatedBuffer' feature for '{1}' but does not provide a three-parameter constructor that takes a '{1}' , a 'Span<byte>', and an 'int'");
        /// <summary>A contiguous collection marshaller that supports marshalling from managed to unmanaged must provide a 'GetManagedValuesSource' that returns a 'ReadOnlySpan&lt;&gt;' and a 'GetUnmanagedValuesDestination' method that returns a 'Span&lt;&gt;'.</summary>
        internal static string @LinearCollectionInRequiresCollectionMethodsDescription => GetResourceString("LinearCollectionInRequiresCollectionMethodsDescription", @"A contiguous collection marshaller that supports marshalling from managed to unmanaged must provide a 'GetManagedValuesSource' that returns a 'ReadOnlySpan<>' and a 'GetUnmanagedValuesDestination' method that returns a 'Span<>'.");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode, but it does not provide a 'GetManagedValuesSource' that returns a 'ReadOnlySpan&lt;&gt;' and a 'GetUnmanagedValuesDestination' method that returns a 'Span&lt;&gt;'</summary>
        internal static string @LinearCollectionInRequiresCollectionMethodsMessage => GetResourceString("LinearCollectionInRequiresCollectionMethodsMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode, but it does not provide a 'GetManagedValuesSource' that returns a 'ReadOnlySpan<>' and a 'GetUnmanagedValuesDestination' method that returns a 'Span<>'");
        /// <summary>A contiguous collection marshaller that supports marshalling from unmanaged to managed must provide a 'GetManagedValuesDestination' that takes an 'int' and returns a 'Span&lt;&gt;' and a 'GetUnmanagedValuesSource' method that takes an 'int' and returns a 'ReadOn ...</summary>
        internal static string @LinearCollectionOutRequiresCollectionMethodsDescription => GetResourceString("LinearCollectionOutRequiresCollectionMethodsDescription", @"A contiguous collection marshaller that supports marshalling from unmanaged to managed must provide a 'GetManagedValuesDestination' that takes an 'int' and returns a 'Span<>' and a 'GetUnmanagedValuesSource' method that takes an 'int' and returns a 'ReadOnlySpan<>'.");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode, but it does not provide a 'GetManagedValuesDestination' that takes an 'int' and returns a 'Span&lt;&gt;' and a 'GetUnmanagedValuesSource' method that takes an 'int' and returns a 'ReadOnlySpan&lt;&gt;'</summary>
        internal static string @LinearCollectionOutRequiresCollectionMethodsMessage => GetResourceString("LinearCollectionOutRequiresCollectionMethodsMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode, but it does not provide a 'GetManagedValuesDestination' that takes an 'int' and returns a 'Span<>' and a 'GetUnmanagedValuesSource' method that takes an 'int' and returns a 'ReadOnlySpan<>'");
        /// <summary>The marshaller type must be a closed generic or have the same number of generic parameters as the managed type so the generator can determine which methods are available on the specific marshaller types.</summary>
        internal static string @ManagedTypeMustBeClosedOrMatchArityDescription => GetResourceString("ManagedTypeMustBeClosedOrMatchArityDescription", @"The marshaller type must be a closed generic or have the same number of generic parameters as the managed type so the generator can determine which methods are available on the specific marshaller types.");
        /// <summary>The managed type '{0}' for entry-point marshaller type '{1}' must be a closed generic type, have the same arity as the managed type if it is a value marshaller, or have one additional generic parameter if it is a collection marshaller.</summary>
        internal static string @ManagedTypeMustBeClosedOrMatchArityMessage => GetResourceString("ManagedTypeMustBeClosedOrMatchArityMessage", @"The managed type '{0}' for entry-point marshaller type '{1}' must be a closed generic type, have the same arity as the managed type if it is a value marshaller, or have one additional generic parameter if it is a collection marshaller.");
        /// <summary>The managed type for a custom marshaller must be non-null.</summary>
        internal static string @ManagedTypeMustBeNonNullDescription => GetResourceString("ManagedTypeMustBeNonNullDescription", @"The managed type for a custom marshaller must be non-null.");
        /// <summary>The managed type for the entry-point marshaller type '{0}' must not be 'null'</summary>
        internal static string @ManagedTypeMustBeNonNullMessage => GetResourceString("ManagedTypeMustBeNonNullMessage", @"The managed type for the entry-point marshaller type '{0}' must not be 'null'");
        /// <summary>The specified 'MarshalAsAttribute' configuration for parameter '{1}' is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular 'DllImport' instead.</summary>
        internal static string @MarshalAsConfigurationNotSupportedMessageParameterLibraryImport => GetResourceString("MarshalAsConfigurationNotSupportedMessageParameterLibraryImport", @"The specified 'MarshalAsAttribute' configuration for parameter '{1}' is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular 'DllImport' instead.");
        /// <summary>The specified 'MarshalAsAttribute' configuration for parameter '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.</summary>
        internal static string @MarshalAsConfigurationNotSupportedMessageParameterCom => GetResourceString("MarshalAsConfigurationNotSupportedMessageParameterCom", @"The specified 'MarshalAsAttribute' configuration for parameter '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.");
        /// <summary>The specified 'MarshalAsAttribute' configuration for the return value of method '{1}' is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular 'DllImport' instead.</summary>
        internal static string @MarshalAsConfigurationNotSupportedMessageReturnLibraryImport => GetResourceString("MarshalAsConfigurationNotSupportedMessageReturnLibraryImport", @"The specified 'MarshalAsAttribute' configuration for the return value of method '{1}' is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular 'DllImport' instead.");
        /// <summary>The specified 'MarshalAsAttribute' configuration for the return value of method '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.</summary>
        internal static string @MarshalAsConfigurationNotSupportedMessageReturnCom => GetResourceString("MarshalAsConfigurationNotSupportedMessageReturnCom", @"The specified 'MarshalAsAttribute' configuration for the return value of method '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.");
        /// <summary>The marshaller type must be a closed generic or have the same number of generic parameters as the managed type so the emitted code can use a specific instantiation.</summary>
        internal static string @MarshallerTypeMustBeClosedOrMatchArityDescription => GetResourceString("MarshallerTypeMustBeClosedOrMatchArityDescription", @"The marshaller type must be a closed generic or have the same number of generic parameters as the managed type so the emitted code can use a specific instantiation.");
        /// <summary>The marshaller type '{0}' pointed to by the entry-point marshaller type '{1}' must be a closed generic type or have the same arity as the managed type</summary>
        internal static string @MarshallerTypeMustBeClosedOrMatchArityMessage => GetResourceString("MarshallerTypeMustBeClosedOrMatchArityMessage", @"The marshaller type '{0}' pointed to by the entry-point marshaller type '{1}' must be a closed generic type or have the same arity as the managed type");
        /// <summary>The 'marshallerType' parameter in the 'System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute' cannot be 'null'.</summary>
        internal static string @MarshallerTypeMustBeNonNullDescription => GetResourceString("MarshallerTypeMustBeNonNullDescription", @"The 'marshallerType' parameter in the 'System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute' cannot be 'null'.");
        /// <summary>The 'marshallerType' parameter in the 'System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute' cannot be 'null'</summary>
        internal static string @MarshallerTypeMustBeNonNullMessage => GetResourceString("MarshallerTypeMustBeNonNullMessage", @"The 'marshallerType' parameter in the 'System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute' cannot be 'null'");
        /// <summary>A marshaller type must either be a stateless static class or a stateful value type. A non-static class is not allowed.</summary>
        internal static string @MarshallerTypeMustBeStaticClassOrStructDescription => GetResourceString("MarshallerTypeMustBeStaticClassOrStructDescription", @"A marshaller type must either be a stateless static class or a stateful value type. A non-static class is not allowed.");
        /// <summary>The type '{0}' must be a static class or a value type</summary>
        internal static string @MarshallerTypeMustBeStaticClassOrStructMessage => GetResourceString("MarshallerTypeMustBeStaticClassOrStructMessage", @"The type '{0}' must be a static class or a value type");
        /// <summary>A type with a 'System.Runtime.InteropServices.CustomMarshallerAttribute' must specify a non-'null' managed type</summary>
        internal static string @MarshallerTypeMustSpecifyManagedTypeDescription => GetResourceString("MarshallerTypeMustSpecifyManagedTypeDescription", @"A type with a 'System.Runtime.InteropServices.CustomMarshallerAttribute' must specify a non-'null' managed type");
        /// <summary>The type '{0}' does not specify a managed type in the 'System.Runtime.InteropServices.CustomMarshallerAttribute' applied to the type</summary>
        internal static string @MarshallerTypeMustSpecifyManagedTypeMessage => GetResourceString("MarshallerTypeMustSpecifyManagedTypeMessage", @"The type '{0}' does not specify a managed type in the 'System.Runtime.InteropServices.CustomMarshallerAttribute' applied to the type");
        /// <summary>The 'marshalMode' argument of 'CustomMarshallerAttribute' must be a valid enum value of 'MarshalMode'.</summary>
        internal static string @MarshalModeMustBeValidEnumValue => GetResourceString("MarshalModeMustBeValidEnumValue", @"The 'marshalMode' argument of 'CustomMarshallerAttribute' must be a valid enum value of 'MarshalMode'.");
        /// <summary>All methods must be declared in the same partial definition of a 'GeneratedComInterface'-attributed interface type to ensure reliable calculation for virtual method table offsets.</summary>
        internal static string @MethodNotDeclaredInAttributedInterfaceDescription => GetResourceString("MethodNotDeclaredInAttributedInterfaceDescription", @"All methods must be declared in the same partial definition of a 'GeneratedComInterface'-attributed interface type to ensure reliable calculation for virtual method table offsets.");
        /// <summary>The method '{0}' is declared on a different partial definition of the interface '{1}' than the definition that has the 'GeneratedComInterface' attribute</summary>
        internal static string @MethodNotDeclaredInAttributedInterfaceMessage => GetResourceString("MethodNotDeclaredInAttributedInterfaceMessage", @"The method '{0}' is declared on a different partial definition of the interface '{1}' than the definition that has the 'GeneratedComInterface' attribute");
        /// <summary>Method is declared in different partial declaration than the 'GeneratedComInterface' attribute.</summary>
        internal static string @MethodNotDeclaredInAttributedInterfaceTitle => GetResourceString("MethodNotDeclaredInAttributedInterfaceTitle", @"Method is declared in different partial declaration than the 'GeneratedComInterface' attribute.");
        /// <summary>A 'GeneratedComInterfaceAttribute'-attributed interface can only derive from at most one other 'GeneratedComInterfaceAttribute'-attributed interface.</summary>
        internal static string @MultipleComInterfaceBaseTypesDescription => GetResourceString("MultipleComInterfaceBaseTypesDescription", @"A 'GeneratedComInterfaceAttribute'-attributed interface can only derive from at most one other 'GeneratedComInterfaceAttribute'-attributed interface.");
        /// <summary>Interface '{0}' is derived from two or more interfaces attributed with 'GeneratedComInterfaceAttribute'.</summary>
        internal static string @MultipleComInterfaceBaseTypesMessage => GetResourceString("MultipleComInterfaceBaseTypesMessage", @"Interface '{0}' is derived from two or more interfaces attributed with 'GeneratedComInterfaceAttribute'.");
        /// <summary>Specified interface derives from two or more 'GeneratedComInterfaceAttribute'-attributed interfaces.</summary>
        internal static string @MultipleComInterfaceBaseTypesTitle => GetResourceString("MultipleComInterfaceBaseTypesTitle", @"Specified interface derives from two or more 'GeneratedComInterfaceAttribute'-attributed interfaces.");
        /// <summary>Either 'ComInterfaceOptions.ManagedObjectWrapper' or 'ComInterfaceOptions.ComObjectWrapper' must be specified.</summary>
        internal static string @OneWrapperMustBeGenerated => GetResourceString("OneWrapperMustBeGenerated", @"Either 'ComInterfaceOptions.ManagedObjectWrapper' or 'ComInterfaceOptions.ComObjectWrapper' must be specified.");
        /// <summary>A 'Value' or 'LinearCollection'-kind native type that supports marshalling in the 'Out' direction must provide a 'ToManaged' method that returns the managed type.</summary>
        internal static string @OutRequiresToManagedDescription => GetResourceString("OutRequiresToManagedDescription", @"A 'Value' or 'LinearCollection'-kind native type that supports marshalling in the 'Out' direction must provide a 'ToManaged' method that returns the managed type.");
        /// <summary>The type '{0}' specifies it supports marshalling in the 'Out' direction, but it does not provide a 'ToManaged' method that returns the managed type</summary>
        internal static string @OutRequiresToManagedMessage => GetResourceString("OutRequiresToManagedMessage", @"The type '{0}' specifies it supports marshalling in the 'Out' direction, but it does not provide a 'ToManaged' method that returns the managed type");
        /// <summary>LibraryImportAttribute requires unsafe code. Project must be updated with '&lt;AllowUnsafeBlocks&gt;true&lt;/AllowUnsafeBlocks&gt;'.</summary>
        internal static string @RequiresAllowUnsafeBlocksDescriptionLibraryImport => GetResourceString("RequiresAllowUnsafeBlocksDescriptionLibraryImport", @"LibraryImportAttribute requires unsafe code. Project must be updated with '<AllowUnsafeBlocks>true</AllowUnsafeBlocks>'.");
        /// <summary>'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code. Project must be updated with '&lt;AllowUnsafeBlocks&gt;true&lt;/AllowUnsafeBlocks&gt;'.</summary>
        internal static string @RequiresAllowUnsafeBlocksDescriptionCom => GetResourceString("RequiresAllowUnsafeBlocksDescriptionCom", @"'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code. Project must be updated with '<AllowUnsafeBlocks>true</AllowUnsafeBlocks>'.");
        /// <summary>LibraryImportAttribute requires unsafe code. Project must be updated with '&lt;AllowUnsafeBlocks&gt;true&lt;/AllowUnsafeBlocks&gt;'.</summary>
        internal static string @RequiresAllowUnsafeBlocksMessageLibraryImport => GetResourceString("RequiresAllowUnsafeBlocksMessageLibraryImport", @"LibraryImportAttribute requires unsafe code. Project must be updated with '<AllowUnsafeBlocks>true</AllowUnsafeBlocks>'.");
        /// <summary>'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code. Project must be updated with '&lt;AllowUnsafeBlocks&gt;true&lt;/AllowUnsafeBlocks&gt;'.</summary>
        internal static string @RequiresAllowUnsafeBlocksMessageCom => GetResourceString("RequiresAllowUnsafeBlocksMessageCom", @"'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code. Project must be updated with '<AllowUnsafeBlocks>true</AllowUnsafeBlocks>'.");
        /// <summary>LibraryImportAttribute requires unsafe code.</summary>
        internal static string @RequiresAllowUnsafeBlocksTitleLibraryImport => GetResourceString("RequiresAllowUnsafeBlocksTitleLibraryImport", @"LibraryImportAttribute requires unsafe code.");
        /// <summary>'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code.</summary>
        internal static string @RequiresAllowUnsafeBlocksTitleCom => GetResourceString("RequiresAllowUnsafeBlocksTitleCom", @"'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code.");
        /// <summary>The return type the two method must be the expected type.</summary>
        internal static string @ReturnTypeMustBeExpectedTypeDescription => GetResourceString("ReturnTypeMustBeExpectedTypeDescription", @"The return type the two method must be the expected type.");
        /// <summary>The return type of '{0}' must be '{1}'</summary>
        internal static string @ReturnTypeMustBeExpectedTypeMessage => GetResourceString("ReturnTypeMustBeExpectedTypeMessage", @"The return type of '{0}' must be '{1}'");
        /// <summary>The return types of the two methods must be the same type.</summary>
        internal static string @ReturnTypesMustMatchDescription => GetResourceString("ReturnTypesMustMatchDescription", @"The return types of the two methods must be the same type.");
        /// <summary>The return type of '{0}' must be the same type as the return type of '{1}'</summary>
        internal static string @ReturnTypesMustMatchMessage => GetResourceString("ReturnTypesMustMatchMessage", @"The return type of '{0}' must be the same type as the return type of '{1}'");
        /// <summary>COM Interop APIs on 'System.Runtime.InteropServices.Marshal' do not support source-generated COM and will fail at runtime</summary>
        internal static string @RuntimeComApisDoNotSupportSourceGeneratedComDescription => GetResourceString("RuntimeComApisDoNotSupportSourceGeneratedComDescription", @"COM Interop APIs on 'System.Runtime.InteropServices.Marshal' do not support source-generated COM and will fail at runtime");
        /// <summary>The method '{0}' only supports runtime-based COM interop and will not work with type '{1}'</summary>
        internal static string @RuntimeComApisDoNotSupportSourceGeneratedComMessage => GetResourceString("RuntimeComApisDoNotSupportSourceGeneratedComMessage", @"The method '{0}' only supports runtime-based COM interop and will not work with type '{1}'");
        /// <summary>COM Interop APIs on 'System.Runtime.InteropServices.Marshal' do not support source-generated COM</summary>
        internal static string @RuntimeComApisDoNotSupportSourceGeneratedComTitle => GetResourceString("RuntimeComApisDoNotSupportSourceGeneratedComTitle", @"COM Interop APIs on 'System.Runtime.InteropServices.Marshal' do not support source-generated COM");
        /// <summary>The size of a collection that is marshalled to the callee must be defined when the method is called.</summary>
        internal static string @SizeOfCollectionMustBeKnownAtMarshalTimeTitle => GetResourceString("SizeOfCollectionMustBeKnownAtMarshalTimeTitle", @"The size of a collection that is marshalled to the callee must be defined when the method is called.");
        /// <summary>The size of parameter '{0}' that is marshalled to the callee must be defined when the method is called, but count parameter '{1}' is an 'out' parameter.</summary>
        internal static string @SizeOfCollectionMustBeKnownAtMarshalTimeMessageOutParam => GetResourceString("SizeOfCollectionMustBeKnownAtMarshalTimeMessageOutParam", @"The size of parameter '{0}' that is marshalled to the callee must be defined when the method is called, but count parameter '{1}' is an 'out' parameter.");
        /// <summary>The size of parameter '{0}' that is marshalled to the callee must be defined when the method is called, but the return value is used as the size of the collection.</summary>
        internal static string @SizeOfCollectionMustBeKnownAtMarshalTimeMessageReturnValue => GetResourceString("SizeOfCollectionMustBeKnownAtMarshalTimeMessageReturnValue", @"The size of parameter '{0}' that is marshalled to the callee must be defined when the method is called, but the return value is used as the size of the collection.");
        /// <summary>A stateful marshaller must have a zero-parameter void-returning instance method named 'Free'.</summary>
        internal static string @StatefulMarshallerRequiresFreeDescription => GetResourceString("StatefulMarshallerRequiresFreeDescription", @"A stateful marshaller must have a zero-parameter void-returning instance method named 'Free'.");
        /// <summary>The type '{0}' is a stateful marshaller and does not have a zero-parameter void-returning instance method named 'Free'</summary>
        internal static string @StatefulMarshallerRequiresFreeMessage => GetResourceString("StatefulMarshallerRequiresFreeMessage", @"The type '{0}' is a stateful marshaller and does not have a zero-parameter void-returning instance method named 'Free'");
        /// <summary>A stateful marshaller that supports marshalling from managed to unmanaged must provide a 'FromManaged' instance method that takes the managed value as a parameter and returns 'void'.</summary>
        internal static string @StatefulMarshallerRequiresFromManagedDescription => GetResourceString("StatefulMarshallerRequiresFromManagedDescription", @"A stateful marshaller that supports marshalling from managed to unmanaged must provide a 'FromManaged' instance method that takes the managed value as a parameter and returns 'void'.");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but it does not provide a one-parameter instance method named 'FromManaged' that takes a '{2}' as a parameter and returns 'void'</summary>
        internal static string @StatefulMarshallerRequiresFromManagedMessage => GetResourceString("StatefulMarshallerRequiresFromManagedMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but it does not provide a one-parameter instance method named 'FromManaged' that takes a '{2}' as a parameter and returns 'void'");
        /// <summary>A stateful marshaller that supports marshalling from unmanaged to managed must provide a 'FromUnmanaged' instance method that takes the unmanaged value as a parameter and returns 'void'.</summary>
        internal static string @StatefulMarshallerRequiresFromUnmanagedDescription => GetResourceString("StatefulMarshallerRequiresFromUnmanagedDescription", @"A stateful marshaller that supports marshalling from unmanaged to managed must provide a 'FromUnmanaged' instance method that takes the unmanaged value as a parameter and returns 'void'.");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but it does not provide a one-parameter instance method named 'FromUnmanaged' that takes the 'unmanaged' value as a parameter and returns 'void'</summary>
        internal static string @StatefulMarshallerRequiresFromUnmanagedMessage => GetResourceString("StatefulMarshallerRequiresFromUnmanagedMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but it does not provide a one-parameter instance method named 'FromUnmanaged' that takes the 'unmanaged' value as a parameter and returns 'void'");
        /// <summary>A stateful marshaller that supports marshalling from unmanaged to managed must provide a 'ToManaged' instance method that takes no parameters and returns the managed type.</summary>
        internal static string @StatefulMarshallerRequiresToManagedDescription => GetResourceString("StatefulMarshallerRequiresToManagedDescription", @"A stateful marshaller that supports marshalling from unmanaged to managed must provide a 'ToManaged' instance method that takes no parameters and returns the managed type.");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but it does not provide a zero-parameter instance method named 'ToManaged' that returns '{2}'</summary>
        internal static string @StatefulMarshallerRequiresToManagedMessage => GetResourceString("StatefulMarshallerRequiresToManagedMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but it does not provide a zero-parameter instance method named 'ToManaged' that returns '{2}'");
        /// <summary>A stateful marshaller that supports marshalling from managed to unmanaged must provide a 'ToUnmanaged' instance method that takes no parameters and returns the 'unmanaged' type.</summary>
        internal static string @StatefulMarshallerRequiresToUnmanagedDescription => GetResourceString("StatefulMarshallerRequiresToUnmanagedDescription", @"A stateful marshaller that supports marshalling from managed to unmanaged must provide a 'ToUnmanaged' instance method that takes no parameters and returns the 'unmanaged' type.");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but it does not provide a zero-parameter instance method named 'ToUnmanaged' that returns the 'unmanaged' type for the marshaller</summary>
        internal static string @StatefulMarshallerRequiresToUnmanagedMessage => GetResourceString("StatefulMarshallerRequiresToUnmanagedMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but it does not provide a zero-parameter instance method named 'ToUnmanaged' that returns the 'unmanaged' type for the marshaller");
        /// <summary>When the 'Managed to Unmanaged with Caller-Allocated Buffer' shape is used by providing an 'AllocateContainerForUnmanagedElements' method that takes a 'Span&lt;T&gt;' on the marshaller type, the type must provide a static 'BufferSize' property to provide the num ...</summary>
        internal static string @StatelessLinearCollectionCallerAllocFromManagedMustHaveBufferSizeDescription => GetResourceString("StatelessLinearCollectionCallerAllocFromManagedMustHaveBufferSizeDescription", @"When the 'Managed to Unmanaged with Caller-Allocated Buffer' shape is used by providing an 'AllocateContainerForUnmanagedElements' method that takes a 'Span<T>' on the marshaller type, the type must provide a static 'BufferSize' property to provide the number of elements in the caller-allocated buffer.");
        /// <summary>The marshaller type '{0}' must have a static read-only 'int' 'BufferSize' property to specify the size of the caller-allocated buffer because it has an 'AllocateContainerForUnmanagedElements' method that takes a caller-allocated 'Span&lt;{1}&gt;'</summary>
        internal static string @StatelessLinearCollectionCallerAllocFromManagedMustHaveBufferSizeMessage => GetResourceString("StatelessLinearCollectionCallerAllocFromManagedMustHaveBufferSizeMessage", @"The marshaller type '{0}' must have a static read-only 'int' 'BufferSize' property to specify the size of the caller-allocated buffer because it has an 'AllocateContainerForUnmanagedElements' method that takes a caller-allocated 'Span<{1}>'");
        /// <summary>A contiguous collection marshaller that supports marshalling from managed to unmanaged must provide a 'GetManagedValuesSource' that takes the managed value as a parameter and returns a 'ReadOnlySpan&lt;&gt;' and a 'GetUnmanagedValuesDestination' method that take ...</summary>
        internal static string @StatelessLinearCollectionInRequiresCollectionMethodsDescription => GetResourceString("StatelessLinearCollectionInRequiresCollectionMethodsDescription", @"A contiguous collection marshaller that supports marshalling from managed to unmanaged must provide a 'GetManagedValuesSource' that takes the managed value as a parameter and returns a 'ReadOnlySpan<>' and a 'GetUnmanagedValuesDestination' method that takes the unmanaged value as a parameter and returns a 'Span<>'");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode, but it does not provide a 'GetManagedValuesSource' that takes '{2}' as a parameter and returns a 'ReadOnlySpan&lt;&gt;' and a 'GetUnmanagedValuesDestination' method that takes the unmanaged value  ...</summary>
        internal static string @StatelessLinearCollectionInRequiresCollectionMethodsMessage => GetResourceString("StatelessLinearCollectionInRequiresCollectionMethodsMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode, but it does not provide a 'GetManagedValuesSource' that takes '{2}' as a parameter and returns a 'ReadOnlySpan<>' and a 'GetUnmanagedValuesDestination' method that takes the unmanaged value as a parameter and returns a 'Span<>'");
        /// <summary>A contiguous collection marshaller that supports marshalling from unmanaged to managed must provide a 'GetManagedValuesDestination' that takes the managed value and returns a 'Span&lt;&gt;' and a 'GetUnmanagedValuesSource' method that takes the unmanaged value a ...</summary>
        internal static string @StatelessLinearCollectionOutRequiresCollectionMethodsDescription => GetResourceString("StatelessLinearCollectionOutRequiresCollectionMethodsDescription", @"A contiguous collection marshaller that supports marshalling from unmanaged to managed must provide a 'GetManagedValuesDestination' that takes the managed value and returns a 'Span<>' and a 'GetUnmanagedValuesSource' method that takes the unmanaged value and an 'int' and returns a 'ReadOnlySpan<>'.");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode, but it does not provide a 'GetManagedValuesDestination' that takes '{2}' and returns a 'Span&lt;&gt;' and a 'GetUnmanagedValuesSource' method that takes the unmanaged value and an 'int' and return ...</summary>
        internal static string @StatelessLinearCollectionOutRequiresCollectionMethodsMessage => GetResourceString("StatelessLinearCollectionOutRequiresCollectionMethodsMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode, but it does not provide a 'GetManagedValuesDestination' that takes '{2}' and returns a 'Span<>' and a 'GetUnmanagedValuesSource' method that takes the unmanaged value and an 'int' and returns a 'ReadOnlySpan<>'");
        /// <summary>A stateless contiguous collection marshaller that supports marshalling from managed to unmanaged must provide an 'AllocateContainerForManagedElements' method taking the unmanaged type as the first parameter and the number of elements as an 'int' parameter</summary>
        internal static string @StatelessLinearCollectionRequiresTwoParameterAllocateContainerForManagedElementsDescription => GetResourceString("StatelessLinearCollectionRequiresTwoParameterAllocateContainerForManagedElementsDescription", @"A stateless contiguous collection marshaller that supports marshalling from managed to unmanaged must provide an 'AllocateContainerForManagedElements' method taking the unmanaged type as the first parameter and the number of elements as an 'int' parameter");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but does not provide a two-parameter 'AllocateContainerForManagedElements' method that takes the unmanaged type as the first parameter and an 'int' as the second parameter</summary>
        internal static string @StatelessLinearCollectionRequiresTwoParameterAllocateContainerForManagedElementsMessage => GetResourceString("StatelessLinearCollectionRequiresTwoParameterAllocateContainerForManagedElementsMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but does not provide a two-parameter 'AllocateContainerForManagedElements' method that takes the unmanaged type as the first parameter and an 'int' as the second parameter");
        /// <summary>A stateless contiguous collection marshaller that supports marshalling from managed to unmanaged must provide an 'AllocateContainerForUnmanagedElements' method taking the managed type as the first parameter and providing the number of elements as an 'out i ...</summary>
        internal static string @StatelessLinearCollectionRequiresTwoParameterAllocateContainerForUnmanagedElementsDescription => GetResourceString("StatelessLinearCollectionRequiresTwoParameterAllocateContainerForUnmanagedElementsDescription", @"A stateless contiguous collection marshaller that supports marshalling from managed to unmanaged must provide an 'AllocateContainerForUnmanagedElements' method taking the managed type as the first parameter and providing the number of elements as an 'out int' parameter");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but does not provide a two-parameter 'AllocateContainerForUnmanagedElements' method that takes a '{2}' as the first parameter and an 'out int' as the second parameter</summary>
        internal static string @StatelessLinearCollectionRequiresTwoParameterAllocateContainerForUnmanagedElementsMessage => GetResourceString("StatelessLinearCollectionRequiresTwoParameterAllocateContainerForUnmanagedElementsMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but does not provide a two-parameter 'AllocateContainerForUnmanagedElements' method that takes a '{2}' as the first parameter and an 'out int' as the second parameter");
        /// <summary>A stateless value marshaller that supports marshalling from unmanaged to managed must provide a 'ConvertToManaged' method that takes the unmanaged type as a parameter and returns the the managed type.</summary>
        internal static string @StatelessRequiresConvertToManagedDescription => GetResourceString("StatelessRequiresConvertToManagedDescription", @"A stateless value marshaller that supports marshalling from unmanaged to managed must provide a 'ConvertToManaged' method that takes the unmanaged type as a parameter and returns the the managed type.");
        /// <summary>The type '{0}' specifies it supports the '{1}' marshal mode, but it does not provide a 'ConvertToManaged' method that takes the unmanaged type as a parameter and returns '{2}'</summary>
        internal static string @StatelessRequiresConvertToManagedMessage => GetResourceString("StatelessRequiresConvertToManagedMessage", @"The type '{0}' specifies it supports the '{1}' marshal mode, but it does not provide a 'ConvertToManaged' method that takes the unmanaged type as a parameter and returns '{2}'");
        /// <summary>A stateless value marshaller that supports marshalling from managed to unmanaged must provide a one-parameter 'ConvertToUnmanaged' method that takes the managed value as the parameter and returns a value of the 'unmanaged' type.</summary>
        internal static string @StatelessValueInRequiresConvertToUnmanagedDescription => GetResourceString("StatelessValueInRequiresConvertToUnmanagedDescription", @"A stateless value marshaller that supports marshalling from managed to unmanaged must provide a one-parameter 'ConvertToUnmanaged' method that takes the managed value as the parameter and returns a value of the 'unmanaged' type.");
        /// <summary>The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but does not provide a one-parameter 'ConvertToUnmanaged' method that takes a '{2}' as a parameter and returns a value of an 'unmanaged' type</summary>
        internal static string @StatelessValueInRequiresConvertToUnmanagedMessage => GetResourceString("StatelessValueInRequiresConvertToUnmanagedMessage", @"The type '{0}' specifies that it supports the '{1}' marshal mode for '{2}' but does not provide a one-parameter 'ConvertToUnmanaged' method that takes a '{2}' as a parameter and returns a value of an 'unmanaged' type");
        /// <summary>The type '{0}' specified as 'GeneratedComInterfaceAttribute.StringMarshallingCustomType' is not accessible by generated code. The type must have at least 'internal' accessibility. {1}</summary>
        internal static string @StringMarshallingCustomTypeNotAccessibleByGeneratedCode => GetResourceString("StringMarshallingCustomTypeNotAccessibleByGeneratedCode", @"The type '{0}' specified as 'GeneratedComInterfaceAttribute.StringMarshallingCustomType' is not accessible by generated code. The type must have at least 'internal' accessibility. {1}");
        /// <summary>The return type of 'ToUnmanaged' and the parameter type of 'FromUnmanaged' must be the same.</summary>
        internal static string @ToFromUnmanagedTypesMustMatchDescription => GetResourceString("ToFromUnmanagedTypesMustMatchDescription", @"The return type of 'ToUnmanaged' and the parameter type of 'FromUnmanaged' must be the same.");
        /// <summary>The return type of 'ToUnmanaged' and the parameter type of 'FromUnmanaged' must be the same</summary>
        internal static string @ToFromUnmanagedTypesMustMatchMessage => GetResourceString("ToFromUnmanagedTypesMustMatchMessage", @"The return type of 'ToUnmanaged' and the parameter type of 'FromUnmanaged' must be the same");
        /// <summary>The return type of 'ConvertToUnmanaged' and the parameter type of 'ConvertToManaged' must be the same.</summary>
        internal static string @ToUnmanagedFromManagedTypesMustMatchDescription => GetResourceString("ToUnmanagedFromManagedTypesMustMatchDescription", @"The return type of 'ConvertToUnmanaged' and the parameter type of 'ConvertToManaged' must be the same.");
        /// <summary>The return type of 'ConvertToUnmanaged' and the parameter type of 'ConvertToManaged' must be the same</summary>
        internal static string @ToUnmanagedFromManagedTypesMustMatchMessage => GetResourceString("ToUnmanagedFromManagedTypesMustMatchMessage", @"The return type of 'ConvertToUnmanaged' and the parameter type of 'ConvertToManaged' must be the same");
        /// <summary>The unmanaged type for a custom marshaller must be a C# unmanaged type.</summary>
        internal static string @TypeMustBeUnmanagedDescription => GetResourceString("TypeMustBeUnmanagedDescription", @"The unmanaged type for a custom marshaller must be a C# unmanaged type.");
        /// <summary>The return type of '{0}' must be unmanaged</summary>
        internal static string @TypeMustBeUnmanagedMessage => GetResourceString("TypeMustBeUnmanagedMessage", @"The return type of '{0}' must be unmanaged");
        /// <summary>'void*' must be castable to the type so the pinned result of the static 'GetPinnableReference' method can be passed to the native context after being pinned.</summary>
        internal static string @TypeMustHaveExplicitCastFromVoidPointerDescription => GetResourceString("TypeMustHaveExplicitCastFromVoidPointerDescription", @"'void*' must be castable to the type so the pinned result of the static 'GetPinnableReference' method can be passed to the native context after being pinned.");
        /// <summary>'void*' must be castable to the type '{0}' because the managed type '{1}' has a static 'GetPinnableReference' method</summary>
        internal static string @TypeMustHaveExplicitCastFromVoidPointerMessage => GetResourceString("TypeMustHaveExplicitCastFromVoidPointerMessage", @"'void*' must be castable to the type '{0}' because the managed type '{1}' has a static 'GetPinnableReference' method");
        /// <summary>For types that are not supported by source-generated P/Invokes, the resulting P/Invoke will rely on the underlying runtime to marshal the specified type.</summary>
        internal static string @TypeNotSupportedDescriptionLibraryImport => GetResourceString("TypeNotSupportedDescriptionLibraryImport", @"For types that are not supported by source-generated P/Invokes, the resulting P/Invoke will rely on the underlying runtime to marshal the specified type.");
        /// <summary>For types that are not supported by source-generated COM, the resulting function pointer will rely on the underlying runtime to marshal the specified type.</summary>
        internal static string @TypeNotSupportedDescriptionCom => GetResourceString("TypeNotSupportedDescriptionCom", @"For types that are not supported by source-generated COM, the resulting function pointer will rely on the underlying runtime to marshal the specified type.");
        /// <summary>The type '{0}' is not supported by source-generated P/Invokes. The generated source will not handle marshalling of parameter '{1}'.</summary>
        internal static string @TypeNotSupportedMessageParameterLibraryImport => GetResourceString("TypeNotSupportedMessageParameterLibraryImport", @"The type '{0}' is not supported by source-generated P/Invokes. The generated source will not handle marshalling of parameter '{1}'.");
        /// <summary>The type '{0}' is not supported by source-generated COM. The generated source will not handle marshalling of parameter '{1}'.</summary>
        internal static string @TypeNotSupportedMessageParameterCom => GetResourceString("TypeNotSupportedMessageParameterCom", @"The type '{0}' is not supported by source-generated COM. The generated source will not handle marshalling of parameter '{1}'.");
        /// <summary>{0} The generated source will not handle marshalling of parameter '{1}'.</summary>
        internal static string @TypeNotSupportedMessageParameterWithDetails => GetResourceString("TypeNotSupportedMessageParameterWithDetails", @"{0} The generated source will not handle marshalling of parameter '{1}'.");
        /// <summary>The type '{0}' is not supported by source-generated P/Invokes. The generated source will not handle marshalling of the return value of method '{1}'.</summary>
        internal static string @TypeNotSupportedMessageReturnLibraryImport => GetResourceString("TypeNotSupportedMessageReturnLibraryImport", @"The type '{0}' is not supported by source-generated P/Invokes. The generated source will not handle marshalling of the return value of method '{1}'.");
        /// <summary>The type '{0}' is not supported by source-generated COM. The generated source will not handle marshalling of the return value of method '{1}'.</summary>
        internal static string @TypeNotSupportedMessageReturnCom => GetResourceString("TypeNotSupportedMessageReturnCom", @"The type '{0}' is not supported by source-generated COM. The generated source will not handle marshalling of the return value of method '{1}'.");
        /// <summary>{0} The generated source will not handle marshalling of the return value of method '{1}'.</summary>
        internal static string @TypeNotSupportedMessageReturnWithDetails => GetResourceString("TypeNotSupportedMessageReturnWithDetails", @"{0} The generated source will not handle marshalling of the return value of method '{1}'.");
        /// <summary>Specified type is not supported by source-generated P/Invokes</summary>
        internal static string @TypeNotSupportedTitle => GetResourceString("TypeNotSupportedTitle", @"Specified type is not supported by source-generated P/Invokes");
        /// <summary>Specified type is not supported by source-generated COM</summary>
        internal static string @TypeNotSupportedTitleCom => GetResourceString("TypeNotSupportedTitleCom", @"Specified type is not supported by source-generated COM");
        /// <summary>Unnecesssary marshalling info was provided. This marshalling information can be removed without any change in behavior to the application.</summary>
        internal static string @UnnecessaryMarshallingInfoDescription => GetResourceString("UnnecessaryMarshallingInfoDescription", @"Unnecesssary marshalling info was provided. This marshalling information can be removed without any change in behavior to the application.");
        /// <summary>Unnecessary marshalling info was provided and can be removed.</summary>
        internal static string @UnnecessaryMarshallingInfoTitle => GetResourceString("UnnecessaryMarshallingInfoTitle", @"Unnecessary marshalling info was provided and can be removed.");
        /// <summary>Unnecessary marshalling info '{0}' was provided for parameter '{1}'. {2}</summary>
        internal static string @UnnecessaryParameterMarshallingInfoMessage => GetResourceString("UnnecessaryParameterMarshallingInfoMessage", @"Unnecessary marshalling info '{0}' was provided for parameter '{1}'. {2}");
        /// <summary>Unnecessary marshalling info '{0}' was provided for the return type of method '{1}'. {2}</summary>
        internal static string @UnnecessaryReturnMarshallingInfoMessage => GetResourceString("UnnecessaryReturnMarshallingInfoMessage", @"Unnecessary marshalling info '{0}' was provided for the return type of method '{1}'. {2}");
        /// <summary>A 'Value'-kind native type that supports the 'CallerAllocatedBuffer' feature must provide a two-parameter constructor taking the managed type and a 'Span' of an 'unmanaged' type as parameters</summary>
        internal static string @ValueInCallerAllocatedBufferRequiresSpanConstructorDescription => GetResourceString("ValueInCallerAllocatedBufferRequiresSpanConstructorDescription", @"A 'Value'-kind native type that supports the 'CallerAllocatedBuffer' feature must provide a two-parameter constructor taking the managed type and a 'Span' of an 'unmanaged' type as parameters");
        /// <summary>The type '{0}' specifies that it supports 'In' marshalling with the 'CallerAllocatedBuffer' feature for '{1}' but does not provide a two-parameter constructor that takes a '{1}' and 'Span' of an 'unmanaged' type as parameters</summary>
        internal static string @ValueInCallerAllocatedBufferRequiresSpanConstructorMessage => GetResourceString("ValueInCallerAllocatedBufferRequiresSpanConstructorMessage", @"The type '{0}' specifies that it supports 'In' marshalling with the 'CallerAllocatedBuffer' feature for '{1}' but does not provide a two-parameter constructor that takes a '{1}' and 'Span' of an 'unmanaged' type as parameters");
        /// <summary>A 'Value'-kind native type must provide a one-parameter constructor taking the managed type as a parameter</summary>
        internal static string @ValueInRequiresOneParameterConstructorDescription => GetResourceString("ValueInRequiresOneParameterConstructorDescription", @"A 'Value'-kind native type must provide a one-parameter constructor taking the managed type as a parameter");
        /// <summary>The type '{0}' specifies that it supports 'In' marshalling of '{1}' but does not provide a one-parameter constructor that takes a '{1}' as a parameter</summary>
        internal static string @ValueInRequiresOneParameterConstructorMessage => GetResourceString("ValueInRequiresOneParameterConstructorMessage", @"The type '{0}' specifies that it supports 'In' marshalling of '{1}' but does not provide a one-parameter constructor that takes a '{1}' as a parameter");
        /// <summary>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on interface '{0}' is invalid. {1}</summary>
        internal static string @InvalidStringMarshallingConfigurationMessageCom => GetResourceString("InvalidStringMarshallingConfigurationMessageCom", @"The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on interface '{0}' is invalid. {1}");
        /// <summary>[In] and [Out] attributes</summary>
        internal static string @InOutAttributes => GetResourceString("InOutAttributes", @"[In] and [Out] attributes");
        /// <summary>The '[Out]' attribute is only supported on array parameters. Consider using 'out' or 'ref' keywords to make the parameter mutable.</summary>
        internal static string @OutAttributeNotSupportedOnByValueParameters => GetResourceString("OutAttributeNotSupportedOnByValueParameters", @"The '[Out]' attribute is only supported on array parameters. Consider using 'out' or 'ref' keywords to make the parameter mutable.");
        /// <summary>The '[In]' attribute is only supported on array parameters. By-value parameters are considered read-only by default.</summary>
        internal static string @InAttributeNotSupportedOnByValueParameters => GetResourceString("InAttributeNotSupportedOnByValueParameters", @"The '[In]' attribute is only supported on array parameters. By-value parameters are considered read-only by default.");
        /// <summary>The '[In]' and '[Out]' attributes are only supported on array parameters. Consider using the 'ref' keyword to make the parameter mutable.</summary>
        internal static string @InOutAttributeNotSupportedOnByValueParameters => GetResourceString("InOutAttributeNotSupportedOnByValueParameters", @"The '[In]' and '[Out]' attributes are only supported on array parameters. Consider using the 'ref' keyword to make the parameter mutable.");
        /// <summary>The return value in the managed definition will be converted to an 'out' parameter when calling the unmanaged COM method. If the return value is intended to be the HRESULT code returned by the unmanaged COM method, use '[PreserveSig]' on the method.</summary>
        internal static string @ComMethodReturningIntWillBeOutParameterMessage => GetResourceString("ComMethodReturningIntWillBeOutParameterMessage", @"The return value in the managed definition will be converted to an 'out' parameter when calling the unmanaged COM method. If the return value is intended to be the HRESULT code returned by the unmanaged COM method, use '[PreserveSig]' on the method.");
        /// <summary>The return value in the managed definition will be converted to an additional 'out' parameter at the end of the parameter list when calling the unmanaged COM method.</summary>
        internal static string @ComMethodReturningIntWillBeOutParameterTitle => GetResourceString("ComMethodReturningIntWillBeOutParameterTitle", @"The return value in the managed definition will be converted to an additional 'out' parameter at the end of the parameter list when calling the unmanaged COM method.");
        /// <summary>The type '{0}' will be treated as a struct in the native signature, not as a native HRESULT. To treat this as an HRESULT, add '[return:MarshalAs(UnmanagedType.Error)]' to the method.</summary>
        internal static string @HResultTypeWillBeTreatedAsStructMessage => GetResourceString("HResultTypeWillBeTreatedAsStructMessage", @"The type '{0}' will be treated as a struct in the native signature, not as a native HRESULT. To treat this as an HRESULT, add '[return:MarshalAs(UnmanagedType.Error)]' to the method.");
        /// <summary>This type will be treated as a struct in the native signature, not as a native HRESULT</summary>
        internal static string @HResultTypeWillBeTreatedAsStructTitle => GetResourceString("HResultTypeWillBeTreatedAsStructTitle", @"This type will be treated as a struct in the native signature, not as a native HRESULT");
        /// <summary>It is recommended to use explicit '[In]' and '[Out]' attributes on array parameters.</summary>
        internal static string @PreferExplicitInOutAttributesOnArrays => GetResourceString("PreferExplicitInOutAttributesOnArrays", @"It is recommended to use explicit '[In]' and '[Out]' attributes on array parameters.");
        /// <summary>The usage of 'GeneratedComInterfaceAttribute' does not follow recommendations.</summary>
        internal static string @ComInterfaceUsageDoesNotFollowBestPracticesTitle => GetResourceString("ComInterfaceUsageDoesNotFollowBestPracticesTitle", @"The usage of 'GeneratedComInterfaceAttribute' does not follow recommendations.");
        /// <summary>The usage of 'GeneratedComInterfaceAttribute' does not follow recommendations. {0}</summary>
        internal static string @ComInterfaceUsageDoesNotFollowBestPracticesMessageWithDetails => GetResourceString("ComInterfaceUsageDoesNotFollowBestPracticesMessageWithDetails", @"The usage of 'GeneratedComInterfaceAttribute' does not follow recommendations. {0}");
        /// <summary>The usage of 'LibraryImportAttribute' does not follow recommendations.</summary>
        internal static string @LibraryImportUsageDoesNotFollowBestPracticesTitle => GetResourceString("LibraryImportUsageDoesNotFollowBestPracticesTitle", @"The usage of 'LibraryImportAttribute' does not follow recommendations.");
        /// <summary>The usage of 'LibraryImportAttribute' does not follow recommendations. {0}</summary>
        internal static string @LibraryImportUsageDoesNotFollowBestPracticesMessageWithDetails => GetResourceString("LibraryImportUsageDoesNotFollowBestPracticesMessageWithDetails", @"The usage of 'LibraryImportAttribute' does not follow recommendations. {0}");
        /// <summary>Objects marshalled from VARIANTs as 'in' parameters in unmanaged-to-managed calls will not propagate back the updated result, even if the VARIANT is a VT_BYREF variant. Use a 'ref' parameter instead of an 'in' parameter to propagate the updated value back  ...</summary>
        internal static string @InVariantShouldBeRef => GetResourceString("InVariantShouldBeRef", @"Objects marshalled from VARIANTs as 'in' parameters in unmanaged-to-managed calls will not propagate back the updated result, even if the VARIANT is a VT_BYREF variant. Use a 'ref' parameter instead of an 'in' parameter to propagate the updated value back to the caller.");
        /// <summary>The type '{0}' has a base interface '{1}' defined in a different assembly. This can cause a variety of difficult to diagnose issues in some scenarios</summary>
        internal static string @BaseInterfaceDefinedInOtherAssemblyMessage => GetResourceString("BaseInterfaceDefinedInOtherAssemblyMessage", @"The type '{0}' has a base interface '{1}' defined in a different assembly. This can cause a variety of difficult to diagnose issues in some scenarios");
        /// <summary>Specifying 'GeneratedComInterfaceAttribute' on an interface that has a base interface defined in another assembly is not supported</summary>
        internal static string @BaseInterfaceDefinedInOtherAssemblyTitle => GetResourceString("BaseInterfaceDefinedInOtherAssemblyTitle", @"Specifying 'GeneratedComInterfaceAttribute' on an interface that has a base interface defined in another assembly is not supported");

    }
}
