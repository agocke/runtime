<Project>

  <Target Name="RefreshProjectTestAssets"
          Condition="'$(UsesTestAssets)' == 'true' and '$(SkipTests)' != 'true'"
          DependsOnTargets="DetermineTestOutputDirectory"
          BeforeTargets="RunTests">
    <!-- Build PrepareTestAssets once for all tests. -->
    <MSBuild
      Projects="$(TestDir)integration\PrepareTestAssets\PrepareTestAssets.proj"
      Targets="PrepareTestAssets" />

    <!--
      Set up the shared framework copy this set of tests should use. There's no known reason to have
      one per test project, but RepoDirectoriesProvider may need some tweaking to share.
    -->
    <MSBuild Projects="$(InstallerProjectRoot)pkg\sfx\bundle\Microsoft.NETCore.App.Bundle.bundleproj"
             Targets="PublishToDisk"
             Properties="OutputPath=$(TestsOutputDir)sharedFrameworkPublish/" />

    <!-- Create files with a name that describes what a test dir is. Useful if path abbreviated. -->
    <WriteLinesToFile
      File="$(TestsOutputRootDir)$(TestsOutputName)-is-$(MSBuildProjectName).txt"
      Overwrite="true"
      Lines="$(MSBuildProjectName) intermediates are located in '$(TestsOutputName)'. Abbreviated to work around path limits on Windows."
      Condition="'$(TestsOutputName)' != '$(MSBuildProjectName)'" />
    <WriteLinesToFile
      File="$(TestsOutputDir)$(MSBuildProjectName).txt"
      Overwrite="true"
      Lines="$(MSBuildProjectName) intermediates are located in '$(TestsOutputName)'. Abbreviated to work around path limits on Windows."
      Condition="'$(TestsOutputName)' != '$(MSBuildProjectName)'" />
  </Target>

  <!--
    Fetch the package version of 'Microsoft.NETCore.App.Runtime.<rid>'. The runtime nupkg project
    always ships, so it may or may not have a stable version depending on product lifecycle.

    Some test projects end in ".Tests", which Arcade detects and applies IsShipping=false. This
    makes ProductVersion non-stable, so we can't rely on the test project's ProductVersion to be the
    same as the package's version. Fetch this directly from the project to avoid guesswork.
  -->
  <Target Name="GetNETCoreAppRuntimePackVersion"
          BeforeTargets="Build">
    <MSBuild
      Projects="$(InstallerProjectRoot)pkg\sfx\Microsoft.NETCore.App\Microsoft.NETCore.App.Runtime.sfxproj"
      Targets="ReturnProductVersion">
      <Output TaskParameter="TargetOutputs" PropertyName="NETCoreAppRuntimePackVersion" />
    </MSBuild>
  </Target>

  <Import Project="$([MSBuild]::GetPathOfFileAbove(Directory.Build.targets, $(MSBuildThisFileDirectory)..))" />
</Project>
